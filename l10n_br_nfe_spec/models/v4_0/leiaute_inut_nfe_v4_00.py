# Copyright 2022 Akretion - Raphaël Valyi <raphael.valyi@akretion.com>
# License LGPL-3.0 or later (https://www.gnu.org/licenses/lgpl-3.0.en.html).
# Generated by https://github.com/akretion/xsdata-odoo
#
import textwrap
from odoo import fields, models
from .tipos_basico_v4_00 import (
    TAMB,
    TCODUFIBGE,
    TMOD,
)

__NAMESPACE__ = "http://www.portalfiscal.inf.br/nfe"

INFINUT_XSERV = [
    ("INUTILIZAR", "INUTILIZAR"),
]


class TinutNfe(models.AbstractModel):
    "Tipo Pedido de Inutilização de Numeração da Nota Fiscal Eletrônica"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "nfe.40.tinutnfe"
    _inherit = "spec.mixin.nfe"
    _binding_type = "TinutNfe"

    nfe40_infInut = fields.Many2one(
        xsd_required=True,
        string="infInut",
        help=(
            "Dados do Pedido de Inutilização de Numeração da Nota Fiscal " "Eletrônica"
        ),
        comodel_name="nfe.40.infinut",
    )

    nfe40_versao = fields.Char(
        xsd_type="TVerInutNFe", xsd_required=True, string="versao"
    )


class InfInut(models.AbstractModel):
    _description = "infInut"
    _name = "nfe.40.infinut"
    _inherit = "spec.mixin.nfe"
    _binding_type = "TinutNfe.InfInut"

    nfe40_tpAmb = fields.Selection(
        TAMB,
        xsd_type="TAmb",
        xsd_required=True,
        string="Identificação do Ambiente",
        help="Identificação do Ambiente:\n1 - Produção\n2 - Homologação",
    )

    nfe40_xServ = fields.Selection(
        INFINUT_XSERV, xsd_required=True, string="Serviço Solicitado"
    )

    nfe40_cUF = fields.Selection(
        TCODUFIBGE,
        xsd_type="TCodUfIBGE",
        xsd_required=True,
        string="Código da UF do emitente",
    )

    nfe40_ano = fields.Char(
        xsd_type="Tano", xsd_required=True, string="Ano de inutilização da numeração"
    )

    nfe40_CNPJ = fields.Char(
        xsd_type="TCnpj", xsd_required=True, string="CNPJ do emitente"
    )

    nfe40_mod = fields.Selection(
        TMOD, xsd_type="TMod", xsd_required=True, string="Modelo da NF-e (55, 65 etc.)"
    )

    nfe40_serie = fields.Char(
        xsd_type="TSerie", xsd_required=True, string="Série da NF-e"
    )

    nfe40_nNFIni = fields.Char(
        xsd_type="TNF", xsd_required=True, string="Número da NF-e inicial"
    )

    nfe40_nNFFin = fields.Char(
        xsd_type="TNF", xsd_required=True, string="Número da NF-e final"
    )

    nfe40_xJust = fields.Char(
        xsd_type="TJust",
        xsd_required=True,
        string="Justificativa do pedido de inutilização",
    )

    nfe40_Id = fields.Char(xsd_required=True, string="Id")


class TretInutNfe(models.AbstractModel):
    """Tipo retorno do Pedido de Inutilização de Numeração da Nota Fiscal
    Eletrônica"""

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "nfe.40.tretinutnfe"
    _inherit = "spec.mixin.nfe"
    _binding_type = "TretInutNfe"

    nfe40_infInut = fields.Many2one(
        xsd_required=True,
        string="infInut",
        help=(
            "Dados do Retorno do Pedido de Inutilização de Numeração da Nota "
            "Fiscal Eletrônica"
        ),
        comodel_name="nfe.40.infinut",
    )

    nfe40_versao = fields.Char(
        xsd_type="TVerInutNFe", xsd_required=True, string="versao"
    )


class InfInut(models.AbstractModel):
    _description = "infInut"
    _name = "nfe.40.infinut"
    _inherit = "spec.mixin.nfe"
    _binding_type = "TretInutNfe.InfInut"

    nfe40_tpAmb = fields.Selection(
        TAMB,
        xsd_type="TAmb",
        xsd_required=True,
        string="Identificação do Ambiente",
        help="Identificação do Ambiente:\n1 - Produção\n2 - Homologação",
    )

    nfe40_verAplic = fields.Char(
        xsd_type="TVerAplic",
        xsd_required=True,
        string="Versão do Aplicativo que processou a NF",
        help="Versão do Aplicativo que processou a NF-e",
    )

    nfe40_cStat = fields.Char(
        xsd_type="TStat",
        xsd_required=True,
        string="Código do status da mensagem enviada",
        help="Código do status da mensagem enviada.",
    )

    nfe40_xMotivo = fields.Char(
        xsd_type="TMotivo",
        xsd_required=True,
        string="Descrição literal do status do serviço solicitado",
        help="Descrição literal do status do serviço solicitado.",
    )

    nfe40_cUF = fields.Selection(
        TCODUFIBGE,
        xsd_type="TCodUfIBGE",
        xsd_required=True,
        string="Código da UF que atendeu a solicitação",
    )

    nfe40_ano = fields.Char(xsd_type="Tano", string="Ano de inutilização da numeração")

    nfe40_CNPJ = fields.Char(xsd_type="TCnpj", string="CNPJ do emitente")

    nfe40_mod = fields.Selection(
        TMOD, xsd_type="TMod", string="Modelo da NF-e (55, etc.)"
    )

    nfe40_serie = fields.Char(xsd_type="TSerie", string="Série da NF-e")

    nfe40_nNFIni = fields.Char(xsd_type="TNF", string="Número da NF-e inicial")

    nfe40_nNFFin = fields.Char(xsd_type="TNF", string="Número da NF-e final")

    nfe40_dhRecbto = fields.Char(
        xsd_type="TDateTimeUTC",
        xsd_required=True,
        string="Data e hora de recebimento",
        help=(
            "Data e hora de recebimento, no formato AAAA-MM-DDTHH:MM:SS. Deve "
            "ser preenchida com data e hora da gravação no Banco em caso de "
            "Confirmação. Em caso de Rejeição, com data e hora do recebimento "
            "do Pedido de Inutilização."
        ),
    )

    nfe40_nProt = fields.Char(
        xsd_type="TProt",
        string="Número do Protocolo de Status da NF",
        help=(
            "Número do Protocolo de Status da NF-e. 1 posição (1 – Secretaria "
            "de Fazenda Estadual 2 – Receita Federal); 2 - código da UF - 2 "
            "posições ano; 10 seqüencial no ano."
        ),
    )

    nfe40_Id = fields.Char(string="Id")


class TprocInutNfe(models.AbstractModel):
    "Tipo Pedido de inutilzação de númeração de NF-e processado"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "nfe.40.tprocinutnfe"
    _inherit = "spec.mixin.nfe"
    _binding_type = "TprocInutNfe"

    nfe40_inutNFe = fields.Many2one(
        xsd_type="TInutNFe",
        xsd_required=True,
        string="inutNFe",
        comodel_name="nfe.40.tinutnfe",
    )

    nfe40_retInutNFe = fields.Many2one(
        xsd_type="TRetInutNFe",
        xsd_required=True,
        string="retInutNFe",
        comodel_name="nfe.40.tretinutnfe",
    )

    nfe40_versao = fields.Char(
        xsd_type="TVerInutNFe", xsd_required=True, string="versao"
    )
