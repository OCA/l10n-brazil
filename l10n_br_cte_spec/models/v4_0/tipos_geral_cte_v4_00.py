# Copyright 2023 Akretion - Raphaël Valyi <raphael.valyi@akretion.com>
# License LGPL-3.0 or later (https://www.gnu.org/licenses/lgpl-3.0.en.html).
# Generated by https://github.com/akretion/xsdata-odoo
#
import textwrap
from odoo import fields, models

__NAMESPACE__ = "http://www.portalfiscal.inf.br/cte"

"Tipo Ambiente"
TAMB = [
    ("1", "1"),
    ("2", "2"),
]

"""Tipo Código de orgão (UF da tabela do IBGE + 90 SUFRAMA + 91 RFB + 94
    SVC-RS + 95 SVC-SP + 96 Sinc. Chaves do RS para SVSP"""
TCORGAOIBGE = [
    ("11", "11"),
    ("12", "12"),
    ("13", "13"),
    ("14", "14"),
    ("15", "15"),
    ("16", "16"),
    ("17", "17"),
    ("21", "21"),
    ("22", "22"),
    ("23", "23"),
    ("24", "24"),
    ("25", "25"),
    ("26", "26"),
    ("27", "27"),
    ("28", "28"),
    ("29", "29"),
    ("31", "31"),
    ("32", "32"),
    ("33", "33"),
    ("35", "35"),
    ("41", "41"),
    ("42", "42"),
    ("43", "43"),
    ("50", "50"),
    ("51", "51"),
    ("52", "52"),
    ("53", "53"),
    ("90", "90"),
    ("91", "91"),
    ("93", "93"),
    ("94", "94"),
    ("95", "95"),
    ("96", "96"),
]

"Tipo Código da UF da tabela do IBGE"
TCODUFIBGE = [
    ("11", "11"),
    ("12", "12"),
    ("13", "13"),
    ("14", "14"),
    ("15", "15"),
    ("16", "16"),
    ("17", "17"),
    ("21", "21"),
    ("22", "22"),
    ("23", "23"),
    ("24", "24"),
    ("25", "25"),
    ("26", "26"),
    ("27", "27"),
    ("28", "28"),
    ("29", "29"),
    ("31", "31"),
    ("32", "32"),
    ("33", "33"),
    ("35", "35"),
    ("41", "41"),
    ("42", "42"),
    ("43", "43"),
    ("50", "50"),
    ("51", "51"),
    ("52", "52"),
    ("53", "53"),
]

"Tipo Modelo Documento Fiscal"
TMODCT = [
    ("57", "57"),
]

"Tipo Modelo Documento Fiscal"
TMODCTOS = [
    ("67", "67"),
]

"Tipo Modelo Documento Fiscal"
TMODCT_CARGA_OS = [
    ("57", "57"),
    ("67", "67"),
]

"Tipo Modelo Documento Fiscal"
TMODGTVE = [
    ("64", "64"),
]

"Tipo Modelo Documento Fiscal - NF Remetente"
TMODNF = [
    ("01", "01"),
    ("04", "04"),
]

"Tipo Sigla da UF, sem Exterior"
TUF_SEM_EX = [
    ("AC", "AC"),
    ("AL", "AL"),
    ("AM", "AM"),
    ("AP", "AP"),
    ("BA", "BA"),
    ("CE", "CE"),
    ("DF", "DF"),
    ("ES", "ES"),
    ("GO", "GO"),
    ("MA", "MA"),
    ("MG", "MG"),
    ("MS", "MS"),
    ("MT", "MT"),
    ("PA", "PA"),
    ("PB", "PB"),
    ("PE", "PE"),
    ("PI", "PI"),
    ("PR", "PR"),
    ("RJ", "RJ"),
    ("RN", "RN"),
    ("RO", "RO"),
    ("RR", "RR"),
    ("RS", "RS"),
    ("SC", "SC"),
    ("SE", "SE"),
    ("SP", "SP"),
    ("TO", "TO"),
]

"Tipo Sigla da UF"
TUF = [
    ("AC", "AC"),
    ("AL", "AL"),
    ("AM", "AM"),
    ("AP", "AP"),
    ("BA", "BA"),
    ("CE", "CE"),
    ("DF", "DF"),
    ("ES", "ES"),
    ("GO", "GO"),
    ("MA", "MA"),
    ("MG", "MG"),
    ("MS", "MS"),
    ("MT", "MT"),
    ("PA", "PA"),
    ("PB", "PB"),
    ("PE", "PE"),
    ("PI", "PI"),
    ("PR", "PR"),
    ("RJ", "RJ"),
    ("RN", "RN"),
    ("RO", "RO"),
    ("RR", "RR"),
    ("RS", "RS"),
    ("SC", "SC"),
    ("SE", "SE"),
    ("SP", "SP"),
    ("TO", "TO"),
    ("EX", "EX"),
]

"Tipo da Unidade de Carga"
TTIPOUNIDCARGA = [
    ("1", "1"),
    ("2", "2"),
    ("3", "3"),
    ("4", "4"),
]

"Tipo da Unidade de Transporte"
TTIPOUNIDTRANSP = [
    ("1", "1"),
    ("2", "2"),
    ("3", "3"),
    ("4", "4"),
    ("5", "5"),
    ("6", "6"),
    ("7", "7"),
]


class TrsakeyValueType(models.AbstractModel):
    "Tipo que representa uma chave publica padrão RSA"

    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "cte.40.trsakeyvaluetype"
    _inherit = "spec.mixin.cte"
    _binding_type = "TrsakeyValueType"

    cte40_Modulus = fields.Char(
        string="Modulus", xsd_required=True, xsd_type="xs:base64Binary"
    )

    cte40_Exponent = fields.Char(
        string="Exponent", xsd_required=True, xsd_type="xs:base64Binary"
    )
