-
  I create a new zip code
-
  !record {model: l10n_br.zip, id: company_zip_test }:
    zip: 88032050
    l10n_br_city_id: l10n_br_base.city_4205407
    state_id: base.state_br_sc
    country_id: base.br
    street: Donicia
    street_type: Rua
    district: centro
-
  I set the created zip code to company and check if it returns correctly
-
  !python {model: res.company, id: base.main_company }: |
    self.zip = '88032050'
    assert self.zip_search(), 'Zip search does not return true'
    assert self.district == 'centro', 'District value is wrong'
    assert self.street == 'Rua Donicia', 'Street value is wrong'
    assert self.l10n_br_city_id.id == ref('l10n_br_base.city_4205407')
-
  I set the values to search the zip code now
-
  !python {model: res.company, id: base.main_company }: |
    self.zip = ''
    self.state_id = ref('base.state_br_sc')
    self.l10n_br_city_id = ref('l10n_br_base.city_4205407')
    self.street = 'donici'
    assert self.zip_search(), 'Zip search does not return true'
    assert self.zip == '88032-050', 'Zip code is wrong'
-
 I check if it raises a warning when there is no zip code
-
  !python {model: res.company, id: base.main_company }: |
    self.zip = '88032000'
    try:
        self.zip_search()
        assert 1 == 2, 'Zip search does not raise warning when no zip code found'
    except:
        pass
-
  I create a new zip to test multiple results
-
  !record {model: l10n_br.zip, id: company_zip_test2 }:
    zip: 88032040
    l10n_br_city_id: l10n_br_base.city_4205407
    state_id: base.state_br_sc
    country_id: base.br
    street: Donicia Maria da Costa
    street_type: Rua
    district: Cacupe
-
  I set the values to search the zip and test if it returns two zip
-
  !python {model: res.company, id: base.main_company }: |
    self.zip = ''
    self.state_id = ref('base.state_br_sc')
    self.l10n_br_city_id = ref('l10n_br_base.city_4205407')
    self.street = 'Donicia'
    self.district = ''
    result = self.zip_search()
    assert result['type'] == 'ir.actions.act_window', 'It should return a action when there are more than one result'
    assert result['res_model'] == 'l10n_br.zip.search', 'It should return the model zip.search'
    assert result['context']['street'] == 'Donicia', 'It should return the correct street'
    assert result['context']['state_id'] == ref('base.state_br_sc'), 'It should return the correct state'

