# Copyright 2023 - TODAY, Akretion - Raphael Valyi <raphael.valyi@akretion.com>
# License AGPL-3.0 or later (https://www.gnu.org/licenses/lgpl-3.0.en.html).
# Generated by https://github.com/akretion/sped-extractor and xsdata-odoo
# flake8: noqa: B950

import textwrap

from erpbrasil.base import misc
from lxml.builder import E

from odoo import api, fields, models
from odoo.exceptions import UserError

from odoo.addons.l10n_br_sped_base.models.sped_mixin import (
    EDITABLE_ON_DRAFT,
    LAYOUT_VERSIONS,
)


class Registro0000(models.Model):
    "Abertura do Arquivo Digital e Identificação da entidade"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0000"
    _inherit = ["l10n_br_sped.efd_icms_ipi.17.0000"]
    _odoo_model = "res.company"

    COD_FIN = fields.Selection(
        [
            ("0", "Remessa do arquivo original"),
            ("1", "Remessa do arquivo substituto"),
        ],
        string="Finalidade do Arquivo",
        default="0",
    )

    cod_obrigacao = fields.Selection(
        [
            ("000", "ICMS a recolher"),
            ("003", "Antecipação do diferencial de alíquotas do ICMS"),
            ("004", "Antecipação do ICMS da importação"),
            ("005", "Antecipação tributária"),
            (
                "006",
                "ICMS resultante da alíquota adicional dos itens incluídos no Fundo de Combate à Pobreza",
            ),
            ("090", "Outras obrigações do ICMS"),
        ],
        string="Código Obrigação",
        default="000",
    )

    cod_receita = fields.Selection(
        [
            ("046-2", "Regime Periódico de Apuração"),
            ("060-7", "Regime de Estimativa"),
            ("063-2", "Outros recolhimentos especiais"),
            ("075-9", "Dívida ativa – cobrança amigável"),
            ("077-2", "Dívida ativa ajuizada - parcelamento"),
            ("078-4", "Dívida ativa ajuizada"),
            ("081-4", "Parcelamento de débito fiscal não inscrito"),
            ("087-5", "ICM/ICMS - Programa de Parcelamento Incentivado - PPI"),
            ("089-9", "ICM/ICMS - Programa Especial de Parcelamento - PEP"),
            ("091-7", "ICM/ICMS - Programa Especial de Parcelamento PEP 2017"),
            ("100-4", "ICMS recolhimento antecipado (outra UF)"),
            ("101-6", "Consumidor final não contribuinte por operação (outra UF)"),
            ("102-8", "Consumidor final não contribuinte por apuração (outra UF)"),
            (
                "103-0",
                "Fundo estadual de combate e erradicação da pobreza (FECOEP) - por operação",
            ),
            (
                "104-1",
                "Fundo estadual de combate e erradicação da pobreza (FECOEP) - por apuração",
            ),
            ("106-5", "Exigido em Auto de Infração e Imposição de Multa - AIIM"),
            (
                "107-7",
                "Exigido em Auto de Infração e Imposição de Multa - AIIM (outra UF)",
            ),
            ("110-7", "Transporte (Transportador autônomo do Estado de São Paulo)"),
            ("111-9", "Transporte (outra UF)"),
            ("112-0", "Comunicação (no Estado de São Paulo)"),
            ("113-2", "Comunicação (outra UF)"),
            ("114-4", "Mercadorias destina a consumo ou a ativo imobilizado"),
            ("115-6", "Energia elétrica (no Estado de São Paulo)"),
            ("116-8", "Energia elétrica (outra UF)"),
            ("117-0", "Combustível (no Estado de São Paulo)"),
            ("118-1", "Combustível (outra UF)"),
            ("119-3", "Recolhimentos especiais (outra UF)"),
            ("120-0", "Mercadoria importada (desembaraçada no Estado de São Paulo)"),
            ("123-5", "Exportação de café cru"),
            ("128-4", "Operações internas e interestaduais com café cru"),
            ("137-5", "Abate de gado"),
            ("141-7", "Operações com feijão"),
            ("146-6", "Substituição tributária (contribuinte do Estado de São Paulo)"),
            ("154-5", "Diferença de estimativa"),
            ("214-8", "Mercadoria importada (desembaraçada em outra UF)"),
            (
                "246-0",
                "Substituição tributária por apuração (contribuinte de outra UF )",
            ),
            ("247-1", "Substituição tributária por operação (outra UF)"),
        ],
        string="Código Receita",
    )

    ind_apur = fields.Selection(
        [
            ("0", "Mensal"),
            ("1", "Decendial"),
        ],
        string="Período apuração IPI",
        default="0",
    )

    IND_ATIV = fields.Selection(
        [
            ("0", "Industrial ou equiparado a industrial"),
            ("1", "Outros"),
        ],
        string="Indicador tipo atividade",
        default="0",
    )

    @api.model
    def _append_top_view_elements(self, group, inline=False):
        super()._append_top_view_elements(group)
        group.append(
            E.field(name="cod_obrigacao", required="1", attrs=EDITABLE_ON_DRAFT)
        )
        group.append(E.field(name="cod_receita", required="1", attrs=EDITABLE_ON_DRAFT))
        group.append(E.field(name="ind_apur", required="1", attrs=EDITABLE_ON_DRAFT))

    @api.model
    def _odoo_domain(self, parent_record, declaration):
        return [("id", "=", declaration.company_id.id)]

    @api.model
    def _map_from_odoo(self, record, parent_record, declaration, index=0):
        return {
            "COD_VER": LAYOUT_VERSIONS["efd_icms_ipi"],
            # "COD_FIN": (will use declaration field directly),
            # "DT_INI": (will use declaration field directly),
            # "DT_FIN": (will use declaration field directly),
            "NOME": record.legal_name,
            "CNPJ": misc.punctuation_rm(record.cnpj_cpf),
            # "CPF": misc.punctuation_rm(record.cnpj_cpf),  # TODO if produtor rural?
            "UF": record.state_id.code,
            "IE": misc.punctuation_rm(record.inscr_est),
            "COD_MUN": misc.punctuation_rm(record.city_id.ibge_code),
            "IM": misc.punctuation_rm(record.inscr_mun or ""),
            "SUFRAMA": record.suframa or "",  # Inscrição da entidade na SUFRAMA
            "IND_PERFIL": "A",  # Perfil de apresentação do arquivo fiscal; A – Per...
            # "IND_ATIV": (will use declaration field directly),
        }


class Registro0002(models.Model):
    "Classificação do Estabelecimento Industrial ou Equiparado a Industrial"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0002"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0002"

    @api.model
    def _map_from_odoo(self, record, parent_record, declaration, index=0):
        if declaration.IND_ATIV == "0":
            return {
                "CLAS_ESTAB_IND": declaration.IND_ATIV,
            }


class Registro0005(models.Model):
    "Dados Complementares da entidade"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0005"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0005"
    _odoo_model = "res.company"

    @api.model
    def _odoo_domain(self, parent_record, declaration):
        return [("id", "=", declaration.company_id.id)]

    @api.model
    def _map_from_odoo(self, record, parent_record, declaration, index=0):
        return {
            "FANTASIA": record.name,
            "CEP": misc.punctuation_rm(record.zip),
            "END": record.street,
            "NUM": misc.punctuation_rm(record.street_number),
            "COMPL": record.street2,
            "BAIRRO": record.district,
            "FONE": misc.punctuation_rm(record.phone),
            # "FAX": 0,  # Número do fax.
            "EMAIL": record.email,
        }


class Registro0015(models.Model):
    "Dados do Contribuinte Substituto ou Responsável pelo ICMS Destino"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0015"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0015"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "UF_ST": 0,  # Sigla da unidade da federação do contribuinte substitu...
    #         "IE_ST": 0,  # Inscrição Estadual do contribuinte substituto na unida...
    #     }


class Registro0100(models.Model):
    "Dados do Contabilista"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0100"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0100"
    _odoo_model = "res.partner"

    @api.model
    def _odoo_domain(self, parent_record, declaration):
        return [("id", "=", declaration.company_id.accountant_id.id)]

    @api.model
    def _map_from_odoo(self, record, parent_record, declaration, index=0):
        if record.child_ids:
            accountant = record.child_ids[0]
        else:
            msg_err = (
                "Cadastre o contador Pessoa Fisica dentro do Contato da Contabilidade"
            )
            raise UserError(msg_err)

        return {
            "NOME": accountant.name,
            "CPF": misc.punctuation_rm(accountant.cnpj_cpf),
            "CRC": misc.punctuation_rm(accountant.crc_code),
            "CNPJ": misc.punctuation_rm(record.cnpj_cpf),
            "CEP": misc.punctuation_rm(record.zip),
            "END": record.street,
            "NUM": misc.punctuation_rm(record.street_number),
            "COMPL": record.street2,
            "BAIRRO": record.district,
            "FONE": misc.punctuation_rm(record.phone),
            # "FAX": 0,  # Número do fax.
            "EMAIL": record.email,
            "COD_MUN": record.city_id.ibge_code,
        }


class Registro0150(models.Model):
    "Tabela de Cadastro do Participante"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0150"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0150"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código de identificação do participante no arquivo.
    #         "NOME": 0,  # Nome pessoal ou empresarial do participante.
    #         "COD_PAIS": 0,  # Código do país do participante, conforme a tabela i...
    #         "CNPJ": 0,  # CNPJ do participante.
    #         "CPF": 0,  # CPF do participante.
    #         "IE": 0,  # Inscrição Estadual do participante.
    #         "COD_MUN": 0,  # Código do município, conforme a tabela IBGE
    #         "SUFRAMA": 0,  # Número de inscrição do participante na SUFRAMA.
    #         "END": 0,  # Logradouro e endereço do imóvel
    #         "NUM": 0,  # Número do imóvel
    #         "COMPL": 0,  # Dados complementares do endereço
    #         "BAIRRO": 0,  # Bairro em que o imóvel está situado
    #     }


class Registro0175(models.Model):
    "Alteração da Tabela de Cadastro de Participante"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0175"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0175"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_ALT": 0,  # Data de alteração do cadastro
    #         "NR_CAMPO": 0,  # Número do campo alterado (campos 03 a 13, exceto 07...
    #         "CONT_ANT": 0,  # Conteúdo anterior do campo
    #     }


class Registro0190(models.Model):
    "Identificação das unidades de medida"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0190"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0190"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "UNID": 0,  # Código da unidade de medida
    #         "DESCR": 0,  # Descrição da unidade de medida
    #     }


class Registro0200(models.Model):
    "Tabela de Identificação do Item"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0200"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0200"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do item
    #         "DESCR_ITEM": 0,  # Descrição do item
    #         "COD_BARRA": 0,  # Representação alfanumérico do código de barra do p...
    #         "COD_ANT_ITEM": 0,  # Código anterior do item com relação à última in...
    #         "UNID_INV": 0,  # Unidade de medida utilizada na quantificação de est...
    #         "TIPO_ITEM": 0,  # Tipo do item – Atividades Industriais, Comerciais ...
    #         "COD_NCM": 0,  # Código da Nomenclatura Comum do Mercosul
    #         "EX_IPI": 0,  # Código EX, conforme a TIPI
    #         "COD_GEN": 0,  # Código do gênero do item, conforme a Tabela 4.2.1
    #         "COD_LST": 0,  # Código do serviço conforme lista do Anexo I da Lei C...
    #         "ALIQ_ICMS": 0,  # Alíquota de ICMS aplicável ao item nas operações i...
    #         "CEST": 0,  # Código Especificador da Substituição Tributária
    #     }


class Registro0205(models.Model):
    "Alteração do Item"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0205"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0205"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DESCR_ANT_ITEM": 0,  # Descrição anterior do item
    #         "DT_INI": 0,  # Data inicial de utilização da descrição do item
    #         "DT_FIM": 0,  # Data final de utilização da descrição do item
    #         "COD_ANT_ITEM": 0,  # Código anterior do item com relação à última in...
    #     }


class Registro0206(models.Model):
    "Código de produto conforme Tabela ANP"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0206"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0206"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_COMB": 0,  # Código do produto, conforme tabela publicada pela A...
    #     }


class Registro0210(models.Model):
    "Consumo Específico Padronizado"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0210"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0210"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM_COMP": 0,  # Código do item componente/insumo (campo 02 do ...
    #         "QTD_COMP": 0,  # Quantidade do item componente/insumo para se produz...
    #         "PERDA": 0,  # Perda/quebra normal percentual do insumo/componente pa...
    #     }


class Registro0220(models.Model):
    "Fatores de Conversão de Unidades"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0220"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0220"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "UNID_CONV": 0,  # Unidade comercial a ser convertida na unidade de e...
    #         "FAT_CONV": 0,  # Fator de conversão: fator utilizado para converter ...
    #         "COD_BARRA": 0,  # Representação alfanumérica do código de barra da u...
    #     }


class Registro0300(models.Model):
    "Cadastro de bens ou componentes do Ativo Imobilizado"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0300"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0300"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_IND_BEM": 0,  # Código individualizado do bem ou componente adot...
    #         "IDENT_MERC": 0,  # Identificação do tipo de mercadoria: 1 = bem; 2 =...
    #         "DESCR_ITEM": 0,  # Descrição do bem ou componente (modelo, marca e o...
    #         "COD_PRNC": 0,  # Código de cadastro do bem principal nos casos em qu...
    #         "COD_CTA": 0,  # Código da conta analítica de contabilização do bem o...
    #         "NR_PARC": 0,  # Número total de parcelas a serem apropriadas, segund...
    #     }


class Registro0305(models.Model):
    "Informação sobre a Utilização do Bem"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0305"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0305"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_CCUS": 0,  # Código do centro de custo onde o bem está sendo ou ...
    #         "FUNC": 0,  # Descrição sucinta da função do bem na atividade do esta...
    #         "VIDA_UTIL": 0,  # Vida útil estimada do bem, em número de meses
    #     }


class Registro0400(models.Model):
    "Tabela de Natureza da Operação/ Prestação"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0400"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0400"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_NAT": 0,  # Código da natureza da operação/prestação
    #         "DESCR_NAT": 0,  # Descrição da natureza da operação/prestação
    #     }


class Registro0450(models.Model):
    "Tabela de Informação Complementar do documento fiscal"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0450"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0450"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_INF": 0,  # Código da informação complementar do documento fisca...
    #         "TXT": 0,  # Texto livre da informação complementar existente no docu...
    #     }


class Registro0460(models.Model):
    "Tabela de Observações do Lançamento Fiscal"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0460"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0460"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_OBS": 0,  # Código da Observação do lançamento fiscal.
    #         "TXT": 0,  # Descrição da observação vinculada ao lançamento fiscal
    #     }


class Registro0500(models.Model):
    "Plano de contas contábeis"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0500"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0500"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_ALT": 0,  # Data da inclusão/alteração
    #         "COD_NAT_CC": 0,  # Código da natureza da conta/grupo de contas: 01 -...
    #         "IND_CTA": 0,  # Indicador do tipo de conta: S - Sintética (grupo de ...
    #         "NIVEL": 0,  # Nível da conta analítica/grupo de contas.
    #         "COD_CTA": 0,  # Código da conta analítica/grupo de contas.
    #         "NOME_CTA": 0,  # Nome da conta analítica/grupo de contas.
    #     }


class Registro0600(models.Model):
    "Centro de custos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.0600"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.0600"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_ALT": 0,  # Data da inclusão/alteração.
    #         "COD_CCUS": 0,  # Código do centro de custos.
    #         "CCUS": 0,  # Nome do centro de custos.
    #     }


class RegistroB020(models.Model):
    "Nota Fiscal (código 01)"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.b020"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.b020"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_OPER": 0,  # Indicador do tipo de operação: 0 - Aquisição; 1 - P...
    #         "IND_EMIT": 0,  # Indicador do emitente do documento fiscal: 0 - Emis...
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "COD_SIT": 0,  # Código da situação do documento conforme tabela 4.1....
    #         "SER": 0,  # Série do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "CHV_NFE": 0,  # Chave da Nota Fiscal Eletrônica
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "COD_MUN_SERV": 0,  # Código do município onde o serviço foi prestado...
    #         "VL_CONT": 0,  # Valor contábil (valor total do documento)
    #         "VL_MAT_TERC": 0,  # Valor do material fornecido por terceiros na pre...
    #         "VL_SUB": 0,  # Valor da subempreitada
    #         "VL_ISNT_ISS": 0,  # Valor das operações isentas ou não- tributadas p...
    #         "VL_DED_BC": 0,  # Valor da dedução da base de cálculo
    #         "VL_BC_ISS": 0,  # Valor da base de cálculo do ISS
    #         "VL_BC_ISS_RT": 0,  # Valor da base de cálculo de retenção do ISS
    #         "VL_ISS_RT": 0,  # Valor do ISS retido pelo tomador
    #         "VL_ISS": 0,  # Valor do ISS destacado
    #         "COD_INF_OBS": 0,  # Código da observação do lançamento fiscal (campo...
    #     }


class RegistroB025(models.Model):
    "Detalhamento por combinação de alíquota e item da lista de serviços da Lei Complementar nº 116/2003"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.b025"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.b025"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_CONT_P": 0,  # Parcela correspondente ao “Valor Contábil” referen...
    #         "VL_BC_ISS_P": 0,  # Parcela correspondente ao “Valor da base de cálc...
    #         "ALIQ_ISS": 0,  # Alíquota do ISS
    #         "VL_ISS_P": 0,  # Parcela correspondente ao “Valor do ISS” referente ...
    #         "VL_ISNT_ISS_P": 0,  # Parcela correspondente ao “Valor das operações...
    #         "COD_SERV": 0,  # Item da lista de serviços, conforme Tabela 4.6.3
    #     }


class RegistroB030(models.Model):
    "Nota fiscal de Serviços Simplificada"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.b030"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.b030"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "NUM_DOC_INI": 0,  # Número do primeiro documento fiscal emitido no d...
    #         "NUM_DOC_FIN": 0,  # Número do último documento fiscal emitido no dia
    #         "DT_DOC": 0,  # Data da emissão dos documentos fiscais
    #         "QTD_CANC": 0,  # Quantidade de documentos cancelados
    #         "VL_CONT": 0,  # Valor contábil (valor total acumulado dos documentos...
    #         "VL_ISNT_ISS": 0,  # Valor acumulado das operações isentas ou não-tri...
    #         "VL_BC_ISS": 0,  # Valor acumulado da base de cálculo do ISS
    #         "VL_ISS": 0,  # Valor acumulado do ISS destacado
    #         "COD_INF_OBS": 0,  # Código da observação do lançamento fiscal (campo...
    #     }


class RegistroB350(models.Model):
    "Serviços prestados por insituições financeiras"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.b350"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.b350"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_CTD": 0,  # Código da conta do plano de contas
    #         "CTA_ISS": 0,  # Descrição da conta no plano de contas
    #         "CTA_COSIF": 0,  # Código COSIF a que está subordinada a conta do ISS...
    #         "QTD_OCOR": 0,  # Quantidade de ocorrências na conta
    #         "COD_SERV": 0,  # Item da lista de serviços, conforme Tabela 4.6.3.
    #         "VL_CONT": 0,  # Valor contábil
    #         "VL_BC_ISS": 0,  # Valor da base de cálculo do ISS
    #         "ALIQ_ISS": 0,  # Alíquota do ISS
    #         "VL_ISS": 0,  # Valor do ISS
    #         "COD_INF_OBS": 0,  # Código da observação do lançamento fiscal (campo...
    #     }


class RegistroB420(models.Model):
    "Totalização dos valores de serviços prestados por combinação de alíquota e item da lista de serviços"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.b420"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.b420"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_CONT": 0,  # Totalização do Valor Contábil das prestações do decl...
    #         "VL_BC_ISS": 0,  # Totalização do Valor da base de cálculo do ISS das...
    #         "ALIQ_ISS": 0,  # Alíquota do ISS
    #         "VL_ISNT_ISS": 0,  # Totalização do valor das operações isentas ou nã...
    #         "VL_ISS": 0,  # Totalização, por combinação da alíquota e item da lis...
    #         "COD_SERV": 0,  # Item da lista de serviços, conforme Tabela 4.6.3.
    #     }


class RegistroB440(models.Model):
    "Totalização dos valores retidos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.b440"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.b440"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_OPER": 0,  # Indicador do tipo de operação: 0 - Aquisição; 1 - P...
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "VL_CONT_RT": 0,  # Totalização do Valor Contábil das prestações e/ou...
    #         "VL_BC_ISS_RT": 0,  # Totalização do Valor da base de cálculo de rete...
    #         "VL_ISS_RT": 0,  # Totalização do Valor do ISS retido pelo tomador da...
    #     }


class RegistroB460(models.Model):
    "Deduções do ISS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.b460"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.b460"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_DED": 0,  # Indicador do tipo de dedução: 0 - Compensação do ISS...
    #         "VL_DED": 0,  # Valor da dedução
    #         "NUM_PROC": 0,  # Número do processo ao qual o ajuste está vinculado,...
    #         "IND_PROC": 0,  # Indicador da origem do processo: 0 - Sefin; 1 - Jus...
    #         "PROC": 0,  # Descrição do processo que embasou o lançamento
    #         "COD_INF_OBS": 0,  # Código da observação do lançamento fiscal (campo...
    #         "IND_OBR": 0,  # Indicador da obrigação onde será aplicada a dedução:...
    #     }


class RegistroB470(models.Model):
    "Apuração do ISS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.b470"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.b470"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_CONT": 0,  # A - Valor total referente às prestações de serviço d...
    #         "VL_MAT_TERC": 0,  # B - Valor total do material fornecido por tercei...
    #         "VL_MAT_PROP": 0,  # C - Valor do material próprio utilizado na prest...
    #         "VL_SUB": 0,  # D - Valor total das subempreitadas
    #         "VL_ISNT": 0,  # E - Valor total das operações isentas ou não-tributa...
    #         "VL_DED_BC": 0,  # F - Valor total das deduções da base de cálculo (B...
    #         "VL_BC_ISS": 0,  # G - Valor total da base de cálculo do ISS
    #         "VL_BC_ISS_RT": 0,  # H - Valor total da base de cálculo de retenção ...
    #         "VL_ISS": 0,  # I - Valor total do ISS destacado
    #         "VL_ISS_RT": 0,  # J - Valor total do ISS retido pelo tomador nas pre...
    #         "VL_DED": 0,  # K - Valor total das deduções do ISS próprio
    #         "VL_ISS_REC": 0,  # L - Valor total apurado do ISS próprio a recolher...
    #         "VL_ISS_ST": 0,  # M - Valor total do ISS substituto a recolher pelas...
    #         "VL_ISS_REC_UNI": 0,  # N - Valor do ISS próprio a recolher pela Soci...
    #     }


class RegistroB500(models.Model):
    "Apuração do ISS sociedade uniprofissional"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.b500"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.b500"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_REC": 0,  # Valor mensal das receitas auferidas pela sociedade un...
    #         "QTD_PROF": 0,  # Quantidade de profissionais habilitados
    #         "VL_OR": 0,  # Valor do ISS devido
    #     }


class RegistroB510(models.Model):
    "Uniprofissional – empregados e sócios"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.b510"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.b510"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_PROF": 0,  # Indicador de habilitação: 0- Profissional habilitad...
    #         "IND_ESC": 0,  # Indicador de escolaridade: 0- Nível superior 1- Níve...
    #         "IND_SOC": 0,  # Indicador de participação societária: 0 - Sócio 1 - ...
    #         "CPF": 0,  # Número de inscrição do profissional no CPF.
    #         "NOME": 0,  # Nome do profissional
    #     }


class RegistroC100(models.Model):
    "Documento - Nota Fiscal (código 01, 1B, 04, 55, 65)"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c100"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c100"
    _odoo_model = "l10n_br_fiscal.document"

    @api.model
    def _odoo_domain(self, parent_record, declaration):
        return [
            ("company_id", "=", declaration.company_id.id),
            ("document_type", "in", ("01", "1B", "04", "55", "65")),
            (
                "state_edoc",
                "in",
                ("autorizada", "cancelada", "denegada", "inutilizada"),
            ),
            ("document_date", ">", declaration.DT_INI),
            ("document_date", "<", declaration.DT_FIN),
        ]

    @api.model
    def _map_from_odoo(self, record, parent_record, declaration, index=0):
        if record.fiscal_operation_type == "in":
            ind_oper = "0"
        else:
            ind_oper = "1"
        if record.issuer == "company":
            ind_emit = "0"
        else:
            ind_emit = "1"

        if record.state_edoc == "cancelada":
            cod_sit = "02"
        elif record.state_edoc == "autorizada" and record.edoc_purpose in ("1", "4"):
            # Documento normal ou devolucao
            cod_sit = "00"
        elif record.state_edoc == "autorizada" and record.edoc_purpose in ("2", "3"):
            # Documento complementar/ajuste
            cod_sit = "06"
        else:
            cod_sit = "TODO"
        # A partir de janeiro de 2023, os códigos de situação de documento 04 (NF-e ou CT-e denegado) e
        # 05 (NF-e ou CT-e Numeração inutilizada) da tabela 4.1.2 - Tabela Situação do Documento serão descontinuados.
        # elif nfe.state_edoc == "denegada" and nfe.edoc_purpose == "1":
        #     cod_sit = "04"
        # elif nfe.state_edoc == "inutilizada":
        #     cod_sit = "05"
        #     registro_c100.SER = ""
        #     registro_c100.CHV_NFE = ""
        # if nfe.emissao_doc == '1' and not nfe.state == 'cancel' \
        #     and nfe.chave_nfe[6:20] != \
        #     self.limpa_formatacao(nfe.partner_id.company_id.cnpj_cpf):
        #     cod_sit = '08'

        ind_pgto = "1"  # TODO ATS-TI code is commented as follow:
        # if nfe.nfe40_pag:
        #     if len(nfe.duplicata_ids) == 1:
        #         if nfe.duplicata_ids.data_vencimento == nfe.data_agendada:
        #             ind_pgto = '0'
        #         else:
        #             ind_pgto = '1'
        #     else:
        #         ind_pgto = '1'
        # else:
        #     ind_pgto = '2'

        return {
            "IND_OPER": ind_oper,
            "IND_EMIT": ind_emit,
            "COD_PART": str(record.partner_id.id),
            "COD_MOD": record.document_type_id.code,
            "COD_SIT": cod_sit,
            "SER": record.document_serie,
            "NUM_DOC": misc.punctuation_rm(str(record.document_number)),
            "CHV_NFE": record.document_key,
            "DT_DOC": record.document_date,
            "DT_E_S": record.date_in_out,
            "VL_DOC": record.amount_total,
            "IND_PGTO": ind_pgto,
            "VL_DESC": record.amount_discount_value,
            "VL_ABAT_NT": record.amount_financial_discount_value,
            "VL_MERC": record.amount_price_gross,
            "IND_FRT": str(record.nfe40_modFrete)
            if hasattr(record, "nfe40_modFrete")
            else "",
            "VL_FRT": record.amount_freight_value,
            "VL_SEG": record.amount_insurance_value,
            "VL_OUT_DA": record.amount_other_value,
            "VL_BC_ICMS": record.amount_icms_base,
            "VL_ICMS": record.amount_icms_value,
            "VL_BC_ICMS_ST": record.amount_icmsst_base,
            "VL_ICMS_ST": record.amount_icmsst_value,
            "VL_IPI": record.amount_ipi_value,
            "VL_PIS": record.amount_pis_value,
            "VL_COFINS": record.amount_cofins_value,
            # "VL_PIS_ST": record.amount_pisst_value,  # don't we have a field?
            # "VL_COFINS_ST": record.amount_cofinsst_value,  # idem
        }


class RegistroC101(models.Model):
    "Informação complementar dos documentos fiscais quando das operações interestaduais destinadas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c101"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c101"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_FCP_UF_DEST": 0,  # Valor total relativo ao Fundo de Combate à Po...
    #         "VL_ICMS_UF_DEST": 0,  # Valor total do ICMS Interestadual para a UF
    #         "VL_ICMS_UF_REM": 0,  # Valor total do ICMS Interestadual para a UF d...
    #     }


class RegistroC105(models.Model):
    "Operações com ICMS ST recolhido para UF diversa do destinatário do docu- mento fiscal"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c105"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c105"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "OPER": 0,  # Indicador do tipo de operação: 0- Combustíveis e Lubrif...
    #         "UF": 0,  # Sigla da UF de destino do ICMS_ST
    #     }


class RegistroC110(models.Model):
    "Complemento de Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c110"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c110"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_INF": 0,  # Código da informação complementar do documento fisca...
    #         "TXT_COMPL": 0,  # Descrição complementar do código de referência.
    #     }


class RegistroC111(models.Model):
    "Complemento de Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c111"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c111"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_PROC": 0,  # Identificação do processo ou ato concessório.
    #         "IND_PROC": 0,  # Indicador da origem do processo: 0 - SEFAZ; 1 - Jus...
    #     }


class RegistroC112(models.Model):
    "Complemento de Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c112"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c112"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_DA": 0,  # Código do modelo do documento de arrecadação : 0 – Do...
    #         "UF": 0,  # Unidade federada beneficiária do recolhimento
    #         "NUM_DA": 0,  # Número do documento de arrecadação
    #         "COD_AUT": 0,  # Código completo da autenticação bancária
    #         "VL_DA": 0,  # Valor do total do documento de arrecadação (principal,...
    #         "DT_VCTO": 0,  # Data de vencimento do documento de arrecadação
    #         "DT_PGTO": 0,  # Data de pagamento do documento de arrecadação, ou da...
    #     }


class RegistroC113(models.Model):
    "Complemento de Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c113"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c113"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_OPER": 0,  # Indicador do tipo de operação: 0- Entrada/aquisição...
    #         "IND_EMIT": 0,  # Indicador do emitente do título: 0- Emissão própria...
    #         "COD_PART": 0,  # Código do participante emitente (campo 02 do Regist...
    #         "COD_MOD": 0,  # Código do documento fiscal, conforme a Tabela 4.1.1
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal.
    #         "CHV_DOCe": 0,  # Chave do Documento Eletrônico
    #     }


class RegistroC114(models.Model):
    "Complemento de Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c114"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c114"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a tab...
    #         "ECF_FAB": 0,  # Número de série de fabricação do ECF
    #         "ECF_CX": 0,  # Número do caixa atribuído ao ECF
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #     }


class RegistroC115(models.Model):
    "Local de coleta e/ou entrega"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c115"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c115"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_CARGA": 0,  # Indicador do tipo de transporte: 0 – Rodoviário; 1...
    #         "CNPJ_COL": 0,  # Número do CNPJ do contribuinte do local de coleta
    #         "IE_COL": 0,  # Inscrição Estadual do contribuinte do local de coleta
    #         "CPF_COL": 0,  # CPF do contribuinte do local de coleta das mercadori...
    #         "COD_MUN_COL": 0,  # Código do Município do local de coleta
    #         "CNPJ_ENTG": 0,  # Número do CNPJ do contribuinte do local de entrega
    #         "IE_ENTG": 0,  # Inscrição Estadual do contribuinte do local de entre...
    #         "CPF_ENTG": 0,  # CPF do contribuinte do local de entrega
    #         "COD_MUN_ENTG": 0,  # Código do Município do local de entrega
    #     }


class RegistroC116(models.Model):
    "Cupom Fiscal Eletrônico"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c116"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c116"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "NR_SAT": 0,  # Número de Série do equipamento SAT
    #         "CHV_CFE": 0,  # Chave do Cupom Fiscal Eletrônico
    #         "NUM_CFE": 0,  # Número do cupom fiscal eletrônico
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #     }


class RegistroC120(models.Model):
    "Complemento de Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c120"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c120"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_DOC_IMP": 0,  # Documento de importação: 0 – Declaração de Impor...
    #         "NUM_DOC_IMP": 0,  # Número do documento de Importação.
    #         "PIS_IMP": 0,  # Valor pago de PIS na importação
    #         "COFINSIMP": 0,  # Valor pago de COFINS na importação
    #         "NUM_ACDRAW": 0,  # Número do Ato Concessório do regime Drawback
    #     }


class RegistroC130(models.Model):
    "Complemento de Documento - ISSQN"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c130"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c130"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_SERV_NT": 0,  # Valor dos serviços sob não-incidência ou não-trib...
    #         "VL_BC_ISSQN": 0,  # Valor da base de cálculo do ISSQN
    #         "VL_ISSQN": 0,  # Valor do ISSQN
    #         "VL_BC_IRRF": 0,  # Valor da base de cálculo do Imposto de Renda Reti...
    #         "VL_IRRF": 0,  # Valor do Imposto de Renda - Retido na Fonte
    #         "VL_BC_PREV": 0,  # Valor da base de cálculo de retenção da Previdênc...
    #         "VL_PREV": 0,  # Valor destacado para retenção da Previdência Social
    #     }


class RegistroC140(models.Model):
    "Complemento de Documento - Fatura"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c140"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c140"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_EMIT": 0,  # Indicador do emitente do título: 0 - Emissão própri...
    #         "IND_TIT": 0,  # Indicador do tipo de título de crédito: 00 - Duplica...
    #         "DESC_TIT": 0,  # Descrição complementar do título de crédito
    #         "NUM_TIT": 0,  # Número ou código identificador do título de crédito
    #         "QTD_PARC": 0,  # Quantidade de parcelas a receber/pagar
    #         "VL_TIT": 0,  # Valor total dos títulos de créditos
    #     }


class RegistroC141(models.Model):
    "Complemento de Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c141"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c141"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_PARC": 0,  # Número da parcela a receber/pagar
    #         "DT_VCTO": 0,  # Data de vencimento da parcela
    #     }


class RegistroC160(models.Model):
    "Complemento de Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c160"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c160"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "VEIC_ID": 0,  # Placa de identificação do veículo automotor
    #         "QTD_VOL": 0,  # Quantidade de volumes transportados
    #         "PESO_BRT": 0,  # Peso bruto dos volumes transportados (em kg)
    #         "PESO_LIQ": 0,  # Peso líquido dos volumes transportados (em kg)
    #         "UF_ID": 0,  # Sigla da UF da placa do veículo
    #     }


class RegistroC165(models.Model):
    "Complemento de Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c165"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c165"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "VEIC_ID": 0,  # Placa de identificação do veículo
    #         "COD_AUT": 0,  # Código da autorização fornecido pela
    #         "NR_PASSE": 0,  # Número do Passe Fiscal
    #         "HORA": 0,  # Hora da saída das mercadorias
    #         "TEMPER": 0,  # Temperatura em graus Celsius utilizada para quantific...
    #         "QTD_VOL": 0,  # Quantidade de volumes transportados
    #         "PESO_BRT": 0,  # Peso bruto dos volumes transportados (em kg)
    #         "PESO_LIQ": 0,  # Peso líquido dos volumes transportados (em kg)
    #         "NOM_MOT": 0,  # Nome do motorista
    #         "CPF": 0,  # CPF do motorista
    #         "UF_ID": 0,  # Sigla da UF da placa do veículo
    #     }


class RegistroC170(models.Model):
    "Complemento de Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c170"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c170"
    _odoo_model = "l10n_br_fiscal.document.line"

    @api.model
    def _odoo_domain(self, parent_record, declaration):
        return [
            ("document_id", "=", parent_record.id),
        ]

    @api.model
    def _map_from_odoo(self, record, parent_record, declaration, index=0):
        return {
            "NUM_ITEM": index + 1,
            "COD_ITEM": record.nfe40_cProd if hasattr(record, "nfe40_pag") else "",
            "DESCR_COMPL": record.name,
            "QTD": record.fiscal_quantity,
            "UNID": record.nfe40_uCom if hasattr(record, "nfe40_uCom") else "",
            "VL_ITEM": record.fiscal_price * record.fiscal_quantity,
            "VL_DESC": record.discount_value,
            "IND_MOV": "0" if record.cfop_id.stock_move else "1",
            "CST_ICMS": record.icms_origin + record.icms_cst_code,
            "CFOP": str(record.cfop_id.code),
            "COD_NAT": str(record.fiscal_operation_id.code),
            "VL_BC_ICMS": record.icms_base,
            "ALIQ_ICMS": record.icms_percent,
            "VL_ICMS": record.icms_value,
            "VL_BC_ICMS_ST": record.icmsst_base,
            "ALIQ_ST": record.icmsst_percent,
            "VL_ICMS_ST": record.icmsst_value,
            "IND_APUR": declaration.ind_apur,
            "CST_IPI": record.ipi_cst_code,
            "COD_ENQ": record.ipi_guideline_id.code,
            "VL_BC_IPI": record.ipi_base,
            "ALIQ_IPI": record.ipi_percent,
            "VL_IPI": record.ipi_value,
            "CST_PIS": record.pis_cst_code,
            "VL_BC_PIS": record.pis_base,
            "ALIQ_PIS": record.pis_percent,
            "QUANT_BC_PIS": record.qBCProd
            if hasattr(record, "qBCProd")
            else record.fiscal_quantity,  # TODO sure?
            # "ALIQ_PIS_INDEX_29": 0,  # Alíquota do PIS (em reais)
            "VL_PIS": record.pis_value,
            "CST_COFINS": record.cofins_cst_code,
            "VL_BC_COFINS": record.cofins_base,
            "ALIQ_COFINS": record.cofins_percent,
            "QUANT_BC_COFINS": record.qBCProd
            if hasattr(record, "qBCProd")
            else record.fiscal_quantity,  # TODO sure?
            # "ALIQ_COFINS_INDEX_35": 0,  # Alíquota da COFINS (em reais)
            "VL_COFINS": record.cofins_value,
            "COD_CTA": "",  # TODO Código da conta analítica contábil debitada/creditad...
            "VL_ABAT_NT": record.financial_discount_value,
        }


class RegistroC171(models.Model):
    "Complemento de Item"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c171"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c171"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_TANQUE": 0,  # Tanque onde foi armazenado o combustível
    #         "QTDE": 0,  # Quantidade ou volume armazenado
    #     }


class RegistroC172(models.Model):
    "Complemento de Item"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c172"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c172"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_BC_ISSQN": 0,  # Valor da base de cálculo do ISSQN
    #         "ALIQ_ISSQN": 0,  # Alíquota do ISSQN
    #         "VL_ISSQN": 0,  # Valor do ISSQN
    #     }


class RegistroC173(models.Model):
    "Complemento de Item"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c173"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c173"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "LOTE_MED": 0,  # Número do lote de fabricação do medicamento
    #         "QTD_ITEM": 0,  # Quantidade de item por lote
    #         "DT_FAB": 0,  # Data de fabricação do medicamento
    #         "DT_VAL": 0,  # Data de expiração da validade do medicamento
    #         "IND_MED": 0,  # Indicador de tipo de referência da base de cálculo d...
    #         "TP_PROD": 0,  # Tipo de produto: 0 - Similar; 1 - Genérico; 2 - Étic...
    #         "VL_TAB_MAX": 0,  # Valor do preço tabelado ou valor do preço máximo
    #     }


class RegistroC174(models.Model):
    "Complemento de Item"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c174"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c174"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_ARM": 0,  # Indicador do tipo da arma de fogo: 0 - Uso permitido...
    #         "NUM_ARM": 0,  # Numeração de série de fabricação da arma
    #         "DESCR_COMPL": 0,  # Descrição da arma, compreendendo: número do cano...
    #     }


class RegistroC175(models.Model):
    "Complemento de Item"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c175"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c175"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_VEIC_OPER": 0,  # Indicador do tipo de operação com veículo: 0 -...
    #         "CNPJ": 0,  # CNPJ da Concessionária
    #         "UF": 0,  # Sigla da unidade da federação da Concessionária
    #         "CHASSI_VEIC": 0,  # Chassi do veículo
    #     }


class RegistroC176(models.Model):
    "Complemento de Item -Ressarcimento de ICMS em operações com Substitui- ção Tributária"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c176"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c176"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD_ULT_E": 0,  # Código do modelo do documento fiscal relativa ...
    #         "NUM_DOC_ULT_E": 0,  # Número do documento fiscal relativa a última e...
    #         "SER_ULT_E": 0,  # Série do documento fiscal relativa a última entrad...
    #         "DT_ULT_E": 0,  # Data relativa a última entrada da mercadoria
    #         "COD_PART_ULT_E": 0,  # Código do participante (do emitente do docume...
    #         "QUANT_ULT_E": 0,  # Quantidade do item relativa a última entrada
    #         "VL_UNIT_ULT_E": 0,  # Valor unitário da mercadoria constante na NF r...
    #         "VL_UNIT_BC_ST": 0,  # Valor unitário da base de cálculo do
    #         "CHAVE_NFE_ULT_E": 0,  # Número completo da chave da NFe relativo à ú...
    #         "NUM_ITEM_ULT_E": 0,  # Número sequencial do item na NF entrada que c...
    #         "VL_UNIT_BC_ICMS_ULT_E": 0,  # Valor unitário da base de cálculo da o...
    #         "ALIQ_ICMS_ULT_E": 0,  # Alíquota do ICMS aplicável à última entrada ...
    #         "VL_UNIT_LIMITE_BC_ICMS_ULT_E": 0,  # Valor unitário da base de cálcu...
    #         "VL_UNIT_ICMS_ULT_E": 0,  # Valor unitário do crédito de ICMS sobre o...
    #         "ALIQ_ST_ULT_E": 0,  # Alíquota do ICMS ST relativa à última entrada ...
    #         "VL_UNIT_RES": 0,  # Valor unitário do ressarcimento (parcial ou comp...
    #         "COD_RESP_RET": 0,  # Código que indica o responsável pela retenção d...
    #         "COD_MOT_RES": 0,  # Código do motivo do ressarcimento: 1 - Saída par...
    #         "CHAVE_NFE_RET": 0,  # Número completo da chave da NF-e emitida pelo ...
    #         "COD_PART_NFE_RET": 0,  # Código do participante do emitente da NF-e ...
    #         "SER_NFE_RET": 0,  # Série da NF-e em que houve a retenção do ICMS ST
    #         "NUM_NFE_RET": 0,  # Número da NF-e em que houve a retenção do ICMS S...
    #         "ITEM_NFE_RET": 0,  # Número sequencial do item na NF-e em que houve ...
    #         "COD_DA": 0,  # Código do modelo do documento de
    #         "NUM_DA": 0,  # Número do documento de arrecadação estadual, se houve...
    #         "VL_UNIT_RES_FCP_ST": 0,  # Valor unitário do ressarcimento (parcial ...
    #     }


class RegistroC177(models.Model):
    "Complemento de Item – Outras informações"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c177"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c177"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_SELO_IPI": 0,  # Código do selo de controle do IPI, conforme Tab...
    #         "QT_SELO_IPI": 0,  # Quantidade de selo de controle do IPI aplicada
    #     }


class RegistroC178(models.Model):
    "Complemento de Item"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c178"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c178"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CL_ENQ": 0,  # Código da classe de enquadramento do IPI, conforme Ta...
    #         "VL_UNID": 0,  # Valor por unidade padrão de tributação
    #         "QUANT_PAD": 0,  # Quantidade total de produtos na unidade padrão de ...
    #     }


class RegistroC179(models.Model):
    "Complemento de Item"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c179"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c179"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "BC_ST_ORIG_DEST": 0,  # Valor da base de cálculo ST na origem/destin...
    #         "ICMS_ST_REP": 0,  # Valor do ICMS ST a repassar/deduzir em operações...
    #         "ICMS_ST_COMPL": 0,  # Valor do ICMS ST a complementar à UF de destin...
    #         "BC_RET": 0,  # Valor da BC de retenção em remessa promovida por Subs...
    #         "ICMS_RET": 0,  # Valor da parcela do imposto retido em remessa promo...
    #     }


class RegistroC180(models.Model):
    "Informações complementares das operações de en- trada de mercadorias sujeitas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c180"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c180"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_RESP_RET": 0,  # Código que indica o responsável pela retenção d...
    #         "QUANT_CONV": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade adotada para informar o campo QUANT_CONV.
    #         "VL_UNIT_CONV": 0,  # Valor unitário da mercadoria, considerando a un...
    #         "VL_UNIT_ICMS_OP_CONV": 0,  # Valor unitário do ICMS operação própria...
    #         "VL_UNIT_BC_ICMS_ST_CONV": 0,  # Valor unitário da base de cálculo do...
    #         "VL_UNIT_ICMS_ST_CONV": 0,  # Valor unitário do imposto pago ou retid...
    #         "VL_UNIT_FCP_ST_CONV": 0,  # Valor unitário do FCP_ST agregado ao val...
    #         "COD_DA": 0,  # Código do modelo do documento de arrecadação: 0 – Doc...
    #         "NUM_DA": 0,  # Número do documento de arrecadação, se houver
    #     }


class RegistroC181(models.Model):
    "Informações complementares das operações de devolução de saídas de mercadorias sujeitas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c181"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c181"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOT_REST_COMPL": 0,  # Código do motivo da restituição ou comple...
    #         "QUANT_CONV": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade adotada para informar o campo QUANT_CONV.
    #         "COD_MOD_SAIDA": 0,  # Código do modelo do documento fiscal de saída,...
    #         "SERIE_SAIDA": 0,  # Número de série do documento de saída em papel
    #         "ECF_FAB_SAIDA": 0,  # Número de série de fabricação do equipamento E...
    #         "NUM_DOC_SAIDA": 0,  # Número do documento fiscal de saída
    #         "CHV_DFE_SAIDA": 0,  # Chave do documento fiscal eletrônico de saída
    #         "DT_DOC_SAIDA": 0,  # Data da emissão do documento fiscal de saída
    #         "NUM_ITEM_SAIDA": 0,  # Número do item em que foi escriturada a saída...
    #         "VL_UNIT_CONV_SAIDA": 0,  # Valor unitário da mercadoria, considerand...
    #     }


class RegistroC185(models.Model):
    "Informações complementares das operações de sa- ída de mercadorias sujeitas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c185"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c185"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_ITEM": 0,  # Número sequencial do item no documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "CST_ICMS": 0,  # Código da Situação Tributária referente ao ICMS
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #         "COD_MOT_REST_COMPL": 0,  # Código do motivo da restituição ou comple...
    #         "QUANT_CONV": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade adotada para informar o campo QUANT_CONV.
    #         "VL_UNIT_CONV": 0,  # Valor unitário da mercadoria, considerando a un...
    #         "VL_UNIT_ICMS_NA_OPERACAO_CONV": 0,  # Valor unitário para o ICMS na ...
    #         "VL_UNIT_ICMS_OP_CONV": 0,  # Valor unitário do ICMS OP calculado con...
    #         "VL_UNIT_ICMS_OP_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS qu...
    #         "VL_UNIT_ICMS_ST_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS ST...
    #     }


class RegistroC186(models.Model):
    "Informações complementares das operações de devolução de entradas de mercadorias sujeitas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c186"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c186"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_ITEM": 0,  # Número sequencial do item no documento fiscal de sa...
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "CST_ICMS": 0,  # Código da Situação Tributária referente ao ICMS no ...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação no documento fisc...
    #         "COD_MOT_REST_COMPL": 0,  # Código do motivo da restituição ou comple...
    #         "QUANT_CONV": 0,  # Quantidade do item no documento fiscal de saída d...
    #         "UNID": 0,  # Unidade adotada para informar o campo QUANT_CONV.
    #         "COD_MOD_ENTRADA": 0,  # Código do modelo do documento fiscal de entr...
    #         "SERIE_ENTRADA": 0,  # Número de série do documento de entrada em pap...
    #         "NUM_DOC_ENTRADA": 0,  # Número do documento fiscal de entrada
    #         "CHV_DFE_ENTRADA": 0,  # Chave do documento fiscal eletrônico de entr...
    #         "DT_DOC_ENTRADA": 0,  # Data da emissão do documento fiscal de entrad...
    #         "NUM_ITEM_ENTRADA": 0,  # Item do documento fiscal de entrada
    #         "VL_UNIT_CONV_ENTRADA": 0,  # Valor unitário da mercadoria, considera...
    #         "VL_UNIT_ICMS_OP_CONV_ENTRADA": 0,  # Valor unitário do ICMS correspo...
    #     }


class RegistroC190(models.Model):
    "Registro Analítico do Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c190"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c190"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação do agrupamento de...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor da operação na combinação de CST_ICMS, CFOP e a...
    #         "VL_BC_ICMS": 0,  # Parcela correspondente ao "Valor da base de cálcu...
    #         "VL_ICMS": 0,  # Parcela correspondente ao "Valor do ICMS", incluindo...
    #         "VL_BC_ICMS_ST": 0,  # Parcela correspondente ao "Valor da base de cá...
    #         "VL_ICMS_ST": 0,  # Parcela correspondente ao valor creditado/debitad...
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "VL_IPI": 0,  # Parcela correspondente ao "Valor do IPI" referente à ...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroC191(models.Model):
    "Informações do Fundo de Combate à Pobreza – FCP – na NF-e"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c191"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c191"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_FCP_OP": 0,  # Valor do Fundo de Combate à Pobreza (FCP) vinculad...
    #         "VL_FCP_ST": 0,  # Valor do Fundo de Combate à Pobreza (FCP) vinculad...
    #         "VL_FCP_RET": 0,  # Valor relativo ao Fundo de Combate à Pobreza (FCP...
    #     }


class RegistroC195(models.Model):
    "Complemento do Registro Analítico"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c195"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c195"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #         "TXT_COMPL": 0,  # Descrição complementar do código de observação.
    #     }


class RegistroC197(models.Model):
    "Outras Obrigações Tributárias"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c197"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c197"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_AJ": 0,  # Código do ajustes/benefício/incentivo, conforme tabel...
    #         "DESCR_COMPL_AJ": 0,  # Descrição complementar do ajuste do documento...
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "VL_BC_ICMS": 0,  # Base de cálculo do ICMS ou do ICMS ST
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_ICMS": 0,  # Valor do ICMS ou do ICMS ST
    #         "VL_OUTROS": 0,  # Outros valores
    #     }


class RegistroC300(models.Model):
    "Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c300"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c300"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC_INI": 0,  # Número do documento fiscal inicial
    #         "NUM_DOC_FIN": 0,  # Número do documento fiscal final
    #         "DT_DOC": 0,  # Data da emissão dos documentos fiscais
    #         "VL_DOC": 0,  # Valor total dos documentos
    #         "VL_PIS": 0,  # Valor total do PIS
    #         "VL_COFINS": 0,  # Valor total da COFINS
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/ credita...
    #     }


class RegistroC310(models.Model):
    "Documentos Cancelados de Nota Fiscal de Venda a Consumidor"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c310"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c310"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_DOC_CANC": 0,  # Número do documento fiscal cancelado
    #     }


class RegistroC320(models.Model):
    "Registro Analítico das Notas Fiscais de Venda a Consumidor"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c320"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c320"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor total acumulado das operações correspondentes à...
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS, refer...
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS, referente à combinação de C...
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroC321(models.Model):
    "Itens dos Resumos Diários dos Documentos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c321"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c321"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade acumulada do item
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor acumulado do item
    #         "VL_DESC": 0,  # Valor do desconto acumulado
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS debitado
    #         "VL_PIS": 0,  # Valor acumulado do PIS
    #         "VL_COFINS": 0,  # Valor acumulado da COFINS
    #     }


class RegistroC330(models.Model):
    "Informações complementares das operações de sa-"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c330"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c330"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOT_REST_COMPL": 0,  # Código do motivo da restituição ou comple...
    #         "QUANT_CONV": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade adotada para informar o campo QUANT_CONV.
    #         "VL_UNIT_CONV": 0,  # Valor unitário da mercadoria, considerando a un...
    #         "VL_UNIT_ICMS_NA_OPERACAO_CONV": 0,  # Valor unitário para o ICMS na ...
    #         "VL_UNIT_ICMS_OP_CONV": 0,  # Valor unitário do ICMS OP calculado con...
    #         "VL_UNIT_ICMS_OP_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS qu...
    #         "VL_UNIT_ICMS_ST_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS ST...
    #     }


class RegistroC350(models.Model):
    "Nota Fiscal de venda a consumidor"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c350"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c350"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB_SER": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "CNPJ_CPF": 0,  # CNPJ ou CPF do destinatário
    #         "VL_MERC": 0,  # Valor das mercadorias constantes no documento fiscal
    #         "VL_DOC": 0,  # Valor total do documento fiscal
    #         "VL_DESC": 0,  # Valor total do desconto
    #         "VL_PIS": 0,  # Valor total do PIS
    #         "VL_COFINS": 0,  # Valor total da COFINS
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/creditad...
    #     }


class RegistroC370(models.Model):
    "Itens do documento (código 02)"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c370"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c370"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_ITEM": 0,  # Número sequencial do item no documento fiscal
    #         "COD_ITEM": 0,  # Código do Item (campo 02 do registro 0200)
    #         "QTD": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade do item (campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor total do item
    #         "VL_DESC": 0,  # Valor total do desconto no item
    #     }


class RegistroC380(models.Model):
    "Informações complementares das operações de sa- ída de mercadorias sujeitas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c380"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c380"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOT_REST_COMPL": 0,  # Código do motivo da restituição ou comple...
    #         "QUANT_CONV": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade adotada para informar o campo QUANT_CONV.
    #         "VL_UNIT_CONV": 0,  # Valor unitário da mercadoria, considerando a un...
    #         "VL_UNIT_ICMS_NA_OPERACAO_CONV": 0,  # Valor unitário para o ICMS na ...
    #         "VL_UNIT_ICMS_OP_CONV": 0,  # Valor unitário do ICMS OP calculado con...
    #         "VL_UNIT_ICMS_OP_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS qu...
    #         "VL_UNIT_ICMS_ST_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS ST...
    #     }


class RegistroC390(models.Model):
    "Registro Analítico das Notas Fiscais de Venda a Consumidor"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c390"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c390"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor total acumulado das operações correspondentes à...
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS, refer...
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS, referente à combinação de C...
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroC400(models.Model):
    "Equipamento ECF (código 02, 2D e 60)"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c400"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c400"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "ECF_MOD": 0,  # Modelo do equipamento
    #         "ECF_FAB": 0,  # Número de série de fabricação do ECF
    #         "ECF_CX": 0,  # Número do caixa atribuído ao ECF
    #     }


class RegistroC405(models.Model):
    "Redução Z (código 02, 2D e 60)"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c405"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c405"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_DOC": 0,  # Data do movimento a que se refere a Redução Z
    #         "CRO": 0,  # Posição do Contador de Reinício de Operação
    #         "CRZ": 0,  # Posição do Contador de Redução Z
    #         "NUM_COO_FIN": 0,  # Número do Contador de Ordem de Operação do últim...
    #         "GT_FIN": 0,  # Valor do Grande Total final
    #         "VL_BRT": 0,  # Valor da venda bruta
    #     }


class RegistroC410(models.Model):
    "PIS e COFINS Totalizados no Dia"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c410"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c410"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_PIS": 0,  # Valor total do PIS
    #         "VL_COFINS": 0,  # Valor total da COFINS
    #     }


class RegistroC420(models.Model):
    "Registro dos Totalizadores Parciais da Redução Z"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c420"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c420"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_TOT_PAR": 0,  # Código do totalizador, conforme Tabela 4.4.6
    #         "VLR_ACUM_TOT": 0,  # Valor acumulado no totalizador, relativo à resp...
    #         "NR_TOT": 0,  # Número do totalizador quando ocorrer mais de uma situ...
    #         "DESCR_NR_TOT": 0,  # Descrição da situação tributária relativa ao to...
    #     }


class RegistroC425(models.Model):
    "Resumo de itens do movimento diário"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c425"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c425"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade acumulada do item
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor acumulado do item
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #     }


class RegistroC430(models.Model):
    "Informações complementares das operações de sa- ída de mercadorias sujeitas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c430"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c430"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOT_REST_COMPL": 0,  # Código do motivo da restituição ou comple...
    #         "QUANT_CONV": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade adotada para informar o campo QUANT_CONV.
    #         "VL_UNIT_CONV": 0,  # Valor unitário da mercadoria, considerando a un...
    #         "VL_UNIT_ICMS_NA_OPERACAO_CONV": 0,  # Valor unitário para o ICMS na ...
    #         "VL_UNIT_ICMS_OP_CONV": 0,  # Valor unitário do ICMS OP calculado con...
    #         "VL_UNIT_ICMS_OP_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS qu...
    #         "VL_UNIT_ICMS_ST_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS ST...
    #     }


class RegistroC460(models.Model):
    "Documento Fiscal Emitido por ECF"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c460"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c460"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "COD_SIT": 0,  # Código da situação do documento fiscal, conforme a T...
    #         "NUM_DOC": 0,  # Número do documento fiscal (COO)
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "VL_DOC": 0,  # Valor total do documento fiscal
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #         "CPF_CNPJ": 0,  # CPF ou CNPJ do adquirente
    #         "NOM_ADQ": 0,  # Nome do adquirente
    #     }


class RegistroC465(models.Model):
    "Complemento do Cupom Fiscal Eletrônico Emitido por ECF"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c465"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c465"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CHV_CFE": 0,  # Chave do Cupom Fiscal Eletrônico
    #         "NUM_CCF": 0,  # Número do Contador de Cupom Fiscal
    #     }


class RegistroC470(models.Model):
    "Itens do Documento Fiscal Emitido por ECF"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c470"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c470"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade do item
    #         "QTD_CANC": 0,  # Quantidade cancelada, no caso de cancelamento
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor total do item
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS – Carga tributária efetiva em per...
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #     }


class RegistroC480(models.Model):
    "Informações complementares das operações de sa- ída de mercadorias sujeitas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c480"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c480"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOT_REST_COMPL": 0,  # Código do motivo da restituição ou comple...
    #         "QUANT_CONV": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade adotada para informar o campo QUANT_CONV.
    #         "VL_UNIT_CONV": 0,  # Valor unitário da mercadoria, considerando a un...
    #         "VL_UNIT_ICMS_NA_OPERACAO_CONV": 0,  # Valor unitário para o ICMS na ...
    #         "VL_UNIT_ICMS_OP_CONV": 0,  # Valor unitário do ICMS OP calculado con...
    #         "VL_UNIT_ICMS_OP_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS qu...
    #         "VL_UNIT_ICMS_ST_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS ST...
    #     }


class RegistroC490(models.Model):
    "Registro Analítico do movimento diário"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c490"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c490"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor da operação correspondente à combinação de CST_...
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS, refer...
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS, referente à combinação de C...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroC495(models.Model):
    "Resumo Mensal de Itens do ECF por Estabelecimento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c495"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c495"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade acumulada do item
    #         "QTD_CANC": 0,  # Quantidade cancelada acumulada, no caso de cancelam...
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor acumulado do item
    #         "VL_DESC": 0,  # Valor acumulado dos descontos
    #         "VL_CANC": 0,  # Valor acumulado dos cancelamentos
    #         "VL_ACMO": 0,  # Valor acumulado dos acréscimos
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS
    #         "VL_ISEN": 0,  # Valor das saídas isentas do ICMS
    #         "VL_NT": 0,  # Valor das saídas sob não-incidência ou não- tributadas...
    #         "VL_ICMS_ST": 0,  # Valor das saídas de mercadorias adquiridas com su...
    #     }


class RegistroC500(models.Model):
    "Nota Fiscal/Conta de Energia Elétrica"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c500"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c500"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_OPER": 0,  # Indicador do tipo de operação: 0 - Entrada; 1 - Saí...
    #         "IND_EMIT": 0,  # Indicador do emitente do documento fiscal: 0 - Emis...
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "COD_SIT": 0,  # Código da situação do documento fiscal, conforme a T...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "COD_CONS": 0,  # - Código de classe de consumo de energia elétrica o...
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "DT_E_S": 0,  # Data da entrada ou da saída
    #         "VL_DOC": 0,  # Valor total do documento fiscal
    #         "VL_DESC": 0,  # Valor total do desconto
    #         "VL_FORN": 0,  # Valor total fornecido/consumido
    #         "VL_SERV_NT": 0,  # Valor total dos serviços não-tributados pelo ICMS
    #         "VL_TERC": 0,  # Valor total cobrado em nome de terceiros
    #         "VL_DA": 0,  # Valor total de despesas acessórias indicadas no docume...
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS
    #         "VL_BC_ICMS_ST": 0,  # Valor acumulado da base de cálculo do ICMS sub...
    #         "VL_ICMS_ST": 0,  # Valor acumulado do ICMS retido por substituição t...
    #         "COD_INF": 0,  # Código da informação complementar do documento fisca...
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #         "TPLIGACAO": 0,  # Código de tipo de Ligação 1 - Monofásico 2 - Bifás...
    #         "COD_GRUPO_TENSAO": 0,  # Código de grupo de tensão: 01 - A1 - Alta T...
    #         "CHV_DOCe": 0,  # Chave da Nota Fiscal de Energia Elétrica Eletrônica
    #         "FIN_DOCe": 0,  # Finalidade da emissão do documento eletrônico: 1 – ...
    #         "CHV_DOCe_REF": 0,  # Chave da nota referenciada.
    #         "IND_DEST": 0,  # Indicador do Destinatário/Acessante: 1 – Contribuin...
    #         "COD_MUN_DEST": 0,  # Código do município do destinatário conforme a ...
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/creditad...
    #         "COD_MOD_DOC_REF": 0,  # Código do modelo do documento fiscal referen...
    #         "HASH_DOC_REF": 0,  # Código de autenticação digital do registro (Con...
    #         "SER_DOC_REF": 0,  # Série do documento fiscal referenciado.
    #         "NUM_DOC_REF": 0,  # Número do documento fiscal referenciado.
    #         "MES_DOC_REF": 0,  # Mês e ano da emissão do documento fiscal referen...
    #         "ENER_INJET": 0,  # Energia injetada
    #         "OUTRAS_DED": 0,  # Outras deduções
    #     }


class RegistroC510(models.Model):
    "Itens do Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c510"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c510"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_ITEM": 0,  # Número sequencial do item no documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "COD_CLASS": 0,  # Código de classificação do item de energia elétric...
    #         "QTD": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor do item
    #         "VL_DESC": 0,  # Valor total do desconto
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #         "VL_BC_ICMS": 0,  # Valor da base de cálculo do ICMS
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_ICMS": 0,  # Valor do ICMS creditado/debitado
    #         "VL_BC_ICMS_ST": 0,  # Valor da base de cálculo referente à substitui...
    #         "ALIQ_ST": 0,  # Alíquota do ICMS da substituição tributária na unida...
    #         "VL_ICMS_ST": 0,  # Valor do ICMS referente à substituição tributária
    #         "IND_REC": 0,  # Indicador do tipo de receita: 0- Receita própria; 1-...
    #         "COD_PART": 0,  # Código do participante receptor da receita, terceir...
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/ credita...
    #     }


class RegistroC590(models.Model):
    "Registro Analítico do Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c590"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c590"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação do agrupamento de...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor da operação correspondente à combinação de CST_...
    #         "VL_BC_ICMS": 0,  # Parcela correspondente ao "Valor da base de cálcu...
    #         "VL_ICMS": 0,  # Parcela correspondente ao "Valor do ICMS" referente ...
    #         "VL_BC_ICMS_ST": 0,  # Parcela correspondente ao "Valor da base de cá...
    #         "VL_ICMS_ST": 0,  # Parcela correspondente ao valor creditado/debitad...
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroC591(models.Model):
    "Informações do Fundo de Combate à Pobreza – FCP na NF3e"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c591"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c591"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_FCP_OP": 0,  # Valor do Fundo de Combate à Pobreza (FCP) vinculad...
    #         "VL_FCP_ST": 0,  # Valor do Fundo de Combate à Pobreza (FCP) vinculad...
    #     }


class RegistroC595(models.Model):
    "Observações do Lançamento Fiscal"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c595"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c595"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #         "TXT_COMPL": 0,  # Descrição complementar do código de observação.
    #     }


class RegistroC597(models.Model):
    "Outras obrigações tributárias"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c597"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c597"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_AJ": 0,  # Código dos ajustes/benefício/incentivo, conforme tabe...
    #         "DESCR_COMPL_AJ": 0,  # Descrição complementar do ajuste do documento...
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "VL_BC_ICMS": 0,  # Base de cálculo do ICMS ou do ICMS ST
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_ICMS": 0,  # Valor do ICMS ou do ICMS ST
    #         "VL_OUTROS": 0,  # Outros valores
    #     }


class RegistroC600(models.Model):
    "Consolidação Diária de Notas Fiscais/Contas de Energia Elétrica"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c600"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c600"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "COD_MUN": 0,  # Código do município dos pontos de consumo, conforme ...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "COD_CONS": 0,  # - Código de classe de consumo de energia elétrica o...
    #         "QTD_CONS": 0,  # Quantidade de documentos consolidados neste registr...
    #         "QTD_CANC": 0,  # Quantidade de documentos cancelados
    #         "DT_DOC": 0,  # Data dos documentos consolidados
    #         "VL_DOC": 0,  # Valor total dos documentos
    #         "VL_DESC": 0,  # Valor acumulado dos descontos
    #         "CONS": 0,  # Consumo total acumulado, em kWh (Código 06)
    #         "VL_FORN": 0,  # Valor acumulado do fornecimento
    #         "VL_SERV_NT": 0,  # Valor acumulado dos serviços não- tributados pelo...
    #         "VL_TERC": 0,  # Valores cobrados em nome de terceiros
    #         "VL_DA": 0,  # Valor acumulado das despesas acessórias
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS
    #         "VL_BC_ICMS_ST": 0,  # Valor acumulado da base de cálculo do ICMS sub...
    #         "VL_ICMS_ST": 0,  # Valor acumulado do ICMS retido por substituição t...
    #         "VL_PIS": 0,  # Valor acumulado do PIS
    #         "VL_COFINS": 0,  # Valor acumulado COFINS
    #     }


class RegistroC601(models.Model):
    "Documentos cancelados"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c601"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c601"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_DOC_CANC": 0,  # Número do documento fiscal cancelado
    #     }


class RegistroC610(models.Model):
    "Itens do Documento Consolidado"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c610"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c610"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_CLASS": 0,  # Código de classificação do item de energia elétric...
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade acumulada do item
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor acumulado do item
    #         "VL_DESC": 0,  # Valor acumulado dos descontos
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação conforme tabela i...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS debitado
    #         "VL_BC_ICMS_ST": 0,  # Valor da base de cálculo do ICMS substituição ...
    #         "VL_ICMS_ST": 0,  # Valor do ICMS retido por substituição tributária
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/creditad...
    #     }


class RegistroC690(models.Model):
    "Registro Analítico dos Documentos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c690"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c690"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação, conforme a tabel...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor da operação correspondente à combinação de CST_...
    #         "VL_BC_ICMS": 0,  # Parcela correspondente ao "Valor da base
    #         "VL_ICMS": 0,  # Parcela correspondente ao "Valor do ICMS" referente ...
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "VL_BC_ICMS_ST": 0,  # Valor da base de cálculo do ICMS substituição ...
    #         "VL_ICMS_ST": 0,  # Valor do ICMS retido por substituição tributária
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroC700(models.Model):
    "Consolidação dos Documentos Nota Fiscal/Conta Energia Elétrica"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c700"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c700"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "NRO_ORD_INI": 0,  # Número de ordem inicial
    #         "NRO_ORD_FIN": 0,  # Número de ordem final
    #         "DT_DOC_INI": 0,  # Data de emissão inicial dos documentos / Data ini...
    #         "DT_DOC_FIN": 0,  # Data de emissão final dos documentos / Data final...
    #         "NOM_MEST": 0,  # Nome do arquivo Mestre de Documento Fiscal
    #         "CHV_COD_DIG": 0,  # Chave de codificação digital do arquivo Mestre d...
    #     }


class RegistroC790(models.Model):
    "Registro Analítico dos Documentos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c790"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c790"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação, conforme a tabel...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor da operação correspondente à combinação de CST_...
    #         "VL_BC_ICMS": 0,  # Parcela correspondente ao “Valor da base de cálcu...
    #         "VL_ICMS": 0,  # Parcela correspondente ao “Valor do ICMS” referente ...
    #         "VL_BC_ICMS_ST": 0,  # Valor da base de cálculo do ICMS substituição ...
    #         "VL_ICMS_ST": 0,  # Valor do ICMS retido por substituição tributária
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroC791(models.Model):
    "Registro de Informações de ICMS ST por UF"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c791"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c791"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "UF": 0,  # Sigla da unidade da federação a que se refere a retenção ...
    #         "VL_BC_ICMS_ST": 0,  # Valor da base de cálculo do ICMS substituição ...
    #         "VL_ICMS_ST": 0,  # Valor do ICMS retido por substituição tributária
    #     }


class RegistroC800(models.Model):
    "Registro Cupom Fiscal Eletrônico"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c800"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c800"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "COD_SIT": 0,  # Código da situação do documento fiscal, conforme a T...
    #         "NUM_CFE": 0,  # Número do Cupom Fiscal Eletrônico
    #         "DT_DOC": 0,  # Data da emissão do Cupom Fiscal Eletrônico
    #         "VL_CFE": 0,  # Valor total do Cupom Fiscal Eletrônico
    #         "VL_PIS": 0,  # Valor total do PIS
    #         "VL_COFINS": 0,  # Valor total da COFINS
    #         "CNPJ_CPF": 0,  # CNPJ ou CPF do destinatário
    #         "NR_SAT": 0,  # Número de Série do equipamento SAT
    #         "CHV_CFE": 0,  # Chave do Cupom Fiscal Eletrônico
    #         "VL_DESC": 0,  # Valor total de descontos
    #         "VL_MERC": 0,  # Valor total das mercadorias e serviços
    #         "VL_OUT_DA": 0,  # Valor total de outras despesas acessórias e acrésc...
    #         "VL_ICMS": 0,  # Valor do ICMS
    #         "VL_PIS_ST": 0,  # Valor total do PIS retido por subst. trib.
    #         "VL_COFINS_ST": 0,  # Valor total da COFINS retido por subst. trib.
    #     }


class RegistroC810(models.Model):
    "Itens do documento do cupom fiscal eletrônico – SAT"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c810"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c810"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_ITEM": 0,  # Número do item no documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor total do item (mercadorias ou serviços)
    #         "CST_ICMS": 0,  # Código da Situação Tributária referente ao ICMS
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #     }


class RegistroC815(models.Model):
    "Informações complementares das operações de sa- ída de mercadorias sujeitas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c815"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c815"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOT_REST_COMPL": 0,  # Código do motivo da restituição ou comple...
    #         "QUANT_CONV": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade adotada para informar o campo QUANT_CONV.
    #         "VL_UNIT_CONV": 0,  # Valor unitário da mercadoria, considerando a un...
    #         "VL_UNIT_ICMS_NA_OPERACAO_CONV": 0,  # Valor unitário para o ICMS na ...
    #         "VL_UNIT_ICMS_OP_CONV": 0,  # Valor unitário do ICMS OP calculado con...
    #         "VL_UNIT_ICMS_OP_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS qu...
    #         "VL_UNIT_ICMS_ST_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS ST...
    #     }


class RegistroC850(models.Model):
    "Registro Analítico do CF-e"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c850"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c850"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação do agrupamento de...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # “Valor total do CF-e” na combinação de CST_ICMS, CFOP...
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS, refer...
    #         "VL_ICMS": 0,  # Parcela correspondente ao “Valor do ICMS” referente ...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroC860(models.Model):
    "Identificação do equipamento SAT-CF-e"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c860"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c860"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "NR_SAT": 0,  # Número de Série do equipamento SAT
    #         "DT_DOC": 0,  # Data de emissão dos documentos fiscais
    #         "DOC_INI": 0,  # Número do documento inicial
    #         "DOC_FIM": 0,  # Número do documento final
    #     }


class RegistroC870(models.Model):
    "Itens do documento do cupom fiscal eletrônico – SAT"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c870"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c870"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "CST_ICMS": 0,  # Código da Situação Tributária referente ao ICMS
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #     }


class RegistroC880(models.Model):
    "Informações complementares das operações de sa- ída de mercadorias sujeitas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c880"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c880"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOT_REST_COMPL": 0,  # Código do motivo da restituição ou comple...
    #         "QUANT_CONV": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade adotada para informar o campo QUANT_CONV.
    #         "VL_UNIT_CONV": 0,  # Valor unitário da mercadoria, considerando a un...
    #         "VL_UNIT_ICMS_NA_OPERACAO_CONV": 0,  # Valor unitário para o ICMS na ...
    #         "VL_UNIT_ICMS_OP_CONV": 0,  # Valor unitário do ICMS OP calculado con...
    #         "VL_UNIT_ICMS_OP_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS qu...
    #         "VL_UNIT_ICMS_ST_ESTOQUE_CONV": 0,  # Valor médio unitário do ICMS ST...
    #     }


class RegistroC890(models.Model):
    "Resumo diário de CF-e"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.c890"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.c890"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação do agrupamento de...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # “Valor total do CF-e” na combinação de CST_ICMS, CFOP...
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS, refer...
    #         "VL_ICMS": 0,  # Parcela correspondente ao "Valor do ICMS" referente ...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroD100(models.Model):
    "Nota Fiscal de Serviço de Transporte"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d100"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d100"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_OPER": 0,  # Indicador do tipo de operação: 0 - Aquisição; 1 - P...
    #         "IND_EMIT": 0,  # Indicador do emitente do documento fiscal: 0 - Emis...
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "COD_SIT": 0,  # Código da situação do documento fiscal, conforme a T...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "CHV_CTE": 0,  # Chave do Conhecimento de Transporte Eletrônico ou do...
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "DT_A_P": 0,  # Data da aquisição ou da prestação do serviço
    #         "TP_CT_e": 0,  # Tipo de Conhecimento de Transporte Eletrônico confor...
    #         "CHV_CTE_REF": 0,  # Chave do Bilhete de Passagem Eletrônico substitu...
    #         "VL_DOC": 0,  # Valor total do documento fiscal
    #         "VL_DESC": 0,  # Valor total do desconto
    #         "IND_FRT": 0,  # Indicador do tipo do frete: 0 - Por conta de terceir...
    #         "VL_SERV": 0,  # Valor total da prestação de serviço
    #         "VL_BC_ICMS": 0,  # Valor da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor do ICMS
    #         "VL_NT": 0,  # Valor não-tributado
    #         "COD_INF": 0,  # Código da informação complementar do documento
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/creditad...
    #         "COD_MUN_ORIG": 0,  # Código do município de origem do serviço, confo...
    #         "COD_MUN_DEST": 0,  # Código do município de destino, conforme a tabe...
    #     }


class RegistroD101(models.Model):
    "Informação complementar dos documentos fiscais quando das prestações interestaduais destinadas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d101"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d101"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_FCP_UF_DEST": 0,  # Valor total relativo ao Fundo de Combate à Po...
    #         "VL_ICMS_UF_DEST": 0,  # Valor total do ICMS Interestadual para a UF ...
    #         "VL_ICMS_UF_REM": 0,  # Valor total do ICMS Interestadual para a UF d...
    #     }


class RegistroD110(models.Model):
    "Itens do documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d110"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d110"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_ITEM": 0,  # Número sequencial do item no documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "VL_SERV": 0,  # Valor do serviço
    #         "VL_OUT": 0,  # Outros valores
    #     }


class RegistroD120(models.Model):
    "Complemento da Nota Fiscal de Serviços de Transporte"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d120"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d120"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MUN_ORIG": 0,  # Código do município de origem do serviço, confo...
    #         "COD_MUN_DEST": 0,  # Código do município de destino, conforme a tabe...
    #         "VEIC_ID": 0,  # Placa de identificação do veículo
    #         "UF_ID": 0,  # Sigla da UF da placa do veículo
    #     }


class RegistroD130(models.Model):
    "Complemento do Conhecimento Rodoviário de Cargas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d130"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d130"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART_CONSG": 0,  # Código do participante (campo 02 do Registro ...
    #         "COD_PART_RED": 0,  # Código do participante (campo 02 do Registro 01...
    #         "IND_FRT_RED": 0,  # Indicador do tipo do frete da operação de redesp...
    #         "COD_MUN_ORIG": 0,  # Código do município de origem do serviço, confo...
    #         "COD_MUN_DEST": 0,  # Código do município de destino, conforme a tabe...
    #         "VEIC_ID": 0,  # Placa de identificação do veículo
    #         "VL_LIQ_FRT": 0,  # Valor líquido do frete
    #         "VL_SEC_CAT": 0,  # Soma de valores de Sec/Cat (serviços de coleta/cu...
    #         "VL_DESP": 0,  # Soma de valores de despacho
    #         "VL_PEDG": 0,  # Soma dos valores de pedágio
    #         "VL_OUT": 0,  # Outros valores
    #         "VL_FRT": 0,  # Valor total do frete
    #         "UF_ID": 0,  # Sigla da UF da placa do veículo
    #     }


class RegistroD140(models.Model):
    "Complemento do Conhecimento Aquaviário de Cargas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d140"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d140"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART_CONSG": 0,  # Código do participante (campo 02 do Registro ...
    #         "COD_MUN_ORIG": 0,  # Código do município de origem do serviço,
    #         "COD_MUN_DEST": 0,  # Código do município de destino, conforme a tabe...
    #         "IND_VEIC": 0,  # Indicador do tipo do veículo transportador: 0- Emba...
    #         "VEIC_ID": 0,  # Identificação da embarcação (IRIM ou Registro CPP)
    #         "IND_NAV": 0,  # Indicador do tipo da navegação: 0- Interior; 1- Cabo...
    #         "VIAGEM": 0,  # Número da viagem
    #         "VL_FRT_LIQ": 0,  # Valor líquido do frete
    #         "VL_DESP_PORT": 0,  # Valor das despesas portuárias
    #         "VL_DESP_CAR_DESC": 0,  # Valor das despesas com carga e descarga
    #         "VL_OUT": 0,  # Outros valores
    #         "VL_FRT_BRT": 0,  # Valor bruto do frete
    #         "VL_FRT_MM": 0,  # Valor adicional do frete para renovação da Marinha...
    #     }


class RegistroD150(models.Model):
    "Complemento do Conhecimento Aéreo de Cargas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d150"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d150"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MUN_ORIG": 0,  # Código do município de origem do serviço, confo...
    #         "COD_MUN_DEST": 0,  # Código do município de destino, conforme a tabe...
    #         "VEIC_ID": 0,  # Identificação da aeronave (DAC)
    #         "VIAGEM": 0,  # Número do vôo.
    #         "IND_TFA": 0,  # Indicador do tipo de tarifa aplicada: 0- Exp.; 1- En...
    #         "VL_PESO_TX": 0,  # Peso taxado
    #         "VL_TX_TERR": 0,  # Valor da taxa terrestre
    #         "VL_TX_RED": 0,  # Valor da taxa de redespacho
    #         "VL_OUT": 0,  # Outros valores
    #         "VL_TX_ADV": 0,  # Valor da taxa "ad valorem"
    #     }


class RegistroD160(models.Model):
    "Carga Transportada"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d160"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d160"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DESPACHO": 0,  # Identificação do número do despacho
    #         "CNPJ_CPF_REM": 0,  # CNPJ ou CPF do remetente das mercadorias que co...
    #         "IE_REM": 0,  # Inscrição Estadual do remetente das mercadorias que c...
    #         "COD_MUN_ORI": 0,  # Código do Município de origem, conforme tabela I...
    #         "CNPJ_CPF_DEST": 0,  # CNPJ ou CPF do destinatário das mercadorias qu...
    #         "IE_DEST": 0,  # Inscrição Estadual do destinatário das mercadorias q...
    #         "COD_MUN_DEST": 0,  # Código do Município de destino, conforme tabela...
    #     }


class RegistroD161(models.Model):
    "Local de Coleta e Entrega"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d161"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d161"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_CARGA": 0,  # Indicador do tipo de transporte da carga coletada:...
    #         "CNPJ_CPF_COL": 0,  # Número do CNPJ ou CPF do local da coleta
    #         "IE_COL": 0,  # Inscrição Estadual do contribuinte do local de coleta
    #         "COD_MUN_COL": 0,  # Código do Município do local de coleta, conforme...
    #         "CNPJ_CPF_ENTG": 0,  # Número do CNPJ ou CPF do local da entrega
    #         "IE_ENTG": 0,  # Inscrição Estadual do contribuinte do local de entre...
    #         "COD_MUN_ENTG": 0,  # Código do Município do local de entrega, confor...
    #     }


class RegistroD162(models.Model):
    "Identificação dos documentos fiscais"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d162"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d162"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "VL_DOC": 0,  # Valor total do documento fiscal
    #         "VL_MERC": 0,  # Valor das mercadorias constantes no documento fiscal
    #         "QTD_VOL": 0,  # Quantidade de volumes transportados
    #         "PESO_BRT": 0,  # Peso bruto dos volumes transportados (em kg)
    #         "PESO_LIQ": 0,  # Peso líquido dos volumes transportados (em kg)
    #     }


class RegistroD170(models.Model):
    "Complemento do Conhecimento Multimodal de Cargas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d170"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d170"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART_CONSG": 0,  # Código do participante (campo 02 do Registro ...
    #         "COD_PART_RED": 0,  # Código do participante (campo 02 do Registro 01...
    #         "COD_MUN_ORIG": 0,  # Código do município de origem do serviço, confo...
    #         "COD_MUN_DEST": 0,  # Código do município de destino, conforme a tabe...
    #         "OTM": 0,  # Registro do operador de transporte multimodal
    #         "IND_NAT_FRT": 0,  # Indicador da natureza do frete: 0- Negociável; 1...
    #         "VL_LIQ_FRT": 0,  # Valor líquido do frete
    #         "VL_GRIS": 0,  # Valor do gris (gerenciamento de risco)
    #         "VL_PDG": 0,  # Somatório dos valores de pedágio
    #         "VL_OUT": 0,  # Outros valores
    #         "VL_FRT": 0,  # Valor total do frete
    #         "VEIC_ID": 0,  # Placa de identificação do veículo
    #         "UF_ID": 0,  # Sigla da UF da placa do veículo
    #     }


class RegistroD180(models.Model):
    "Modais (código 26)"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d180"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d180"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_SEQ": 0,  # Número de ordem sequencial do modal
    #         "IND_EMIT": 0,  # Indicador do emitente do documento fiscal: 0 - Emis...
    #         "CNPJ_CPF_EMIT": 0,  # CNPJ ou CPF do participante emitente do modal
    #         "UF_EMIT": 0,  # Sigla da unidade da federação do participante emiten...
    #         "IE_EMIT": 0,  # Inscrição Estadual do participante emitente do modal
    #         "COD_MUN_ORIG": 0,  # Código do município de origem do serviço, confo...
    #         "CNPJ_CPF_TOM": 0,  # CNPJ/CPF do participante tomador do serviço
    #         "UF_TOM": 0,  # Sigla da unidade da federação do participante tomador...
    #         "IE_TOM": 0,  # Inscrição Estadual do participante tomador do serviço
    #         "COD_MUN_DEST": 0,  # Código do município de destino, conforme a tabe...
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "VL_DOC": 0,  # Valor total do documento fiscal
    #     }


class RegistroD190(models.Model):
    "Registro Analítico dos Documentos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d190"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d190"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação, conforme a tabel...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor da operação correspondente à combinação de CST_...
    #         "VL_BC_ICMS": 0,  # Parcela correspondente ao "Valor da base de cálcu...
    #         "VL_ICMS": 0,  # Parcela correspondente ao "Valor do ICMS" referente ...
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroD195(models.Model):
    "Observações do lançamento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d195"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d195"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #         "TXT_COMPL": 0,  # Descrição complementar do código de observação.
    #     }


class RegistroD197(models.Model):
    "Outras obrigações tributárias"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d197"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d197"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_AJ": 0,  # Código do ajustes/benefício/incentivo, conforme tabel...
    #         "DESCR_COMPL_AJ": 0,  # Descrição complementar do ajuste do documento...
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "VL_BC_ICMS": 0,  # Base de cálculo do ICMS ou do ICMS ST
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_ICMS": 0,  # Valor do ICMS ou do ICMS ST
    #         "VL_OUTROS": 0,  # Outros valores
    #     }


class RegistroD300(models.Model):
    "Registro Analítico dos bilhetes consolidados de Passagem Rodoviário"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d300"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d300"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC_INI": 0,  # Número do primeiro documento fiscal emitido (mes...
    #         "NUM_DOC_FIN": 0,  # Número do último documento fiscal emitido (mesmo...
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação conforme tabela i...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "DT_DOC": 0,  # Data da emissão dos documentos fiscais
    #         "VL_OPR": 0,  # Valor total acumulado das operações correspondentes à...
    #         "VL_DESC": 0,  # Valor total dos descontos
    #         "VL_SERV": 0,  # Valor total da prestação de serviço
    #         "VL_SEG": 0,  # Valor de seguro
    #         "VL_OUTDESP": 0,  # Valor de outras despesas
    #         "VL_BC_ICMS": 0,  # Valor total da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor total do ICMS
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/creditad...
    #     }


class RegistroD301(models.Model):
    "Documentos cancelados dos Bilhetes de Passagem Rodoviário"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d301"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d301"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_DOC_CANC": 0,  # Número do documento fiscal cancelado
    #     }


class RegistroD310(models.Model):
    "Complemento dos Bilhetes"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d310"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d310"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MUN_ORIG": 0,  # Código do município de origem do serviço, confo...
    #         "VL_SERV": 0,  # Valor total da prestação de serviço
    #         "VL_BC_ICMS": 0,  # Valor total da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor total do ICMS
    #     }


class RegistroD350(models.Model):
    "Equipamento ECF"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d350"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d350"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "ECF_MOD": 0,  # Modelo do equipamento
    #         "ECF_FAB": 0,  # Número de série de fabricação do ECF
    #         "ECF_CX": 0,  # Número do caixa atribuído ao ECF
    #     }


class RegistroD355(models.Model):
    "Redução Z"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d355"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d355"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_DOC": 0,  # Data do movimento a que se refere a Redução Z
    #         "CRO": 0,  # Posição do Contador de Reinício de Operação
    #         "CRZ": 0,  # Posição do Contador de Redução Z
    #         "NUM_COO_FIN": 0,  # Número do Contador de Ordem de Operação do últim...
    #         "GT_FIN": 0,  # Valor do Grande Total final
    #         "VL_BRT": 0,  # Valor da venda bruta
    #     }


class RegistroD360(models.Model):
    "PIS E COFINS totalizados no dia"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d360"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d360"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_PIS": 0,  # Valor total do PIS
    #         "VL_COFINS": 0,  # Valor total da COFINS
    #     }


class RegistroD365(models.Model):
    "Registro dos Totalizadores Parciais da Redução Z"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d365"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d365"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_TOT_PAR": 0,  # Código do totalizador, conforme Tabela 4.4.6
    #         "VLR_ACUM_TOT": 0,  # Valor acumulado no totalizador, relativo à resp...
    #         "NR_TOT": 0,  # Número do totalizador quando ocorrer mais de uma situ...
    #         "DESCR_NR_TOT": 0,  # Descrição da situação tributária relativa ao to...
    #     }


class RegistroD370(models.Model):
    "Complemento dos documentos informados"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d370"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d370"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MUN_ORIG": 0,  # Código do município de origem do serviço, confo...
    #         "VL_SERV": 0,  # Valor total da prestação de serviço
    #         "QTD_BILH": 0,  # Quantidade de bilhetes emitidos
    #         "VL_BC_ICMS": 0,  # Valor total da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor total do ICMS
    #     }


class RegistroD390(models.Model):
    "Registro analítico do movimento diário"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d390"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d390"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor da operação correspondente à combinação de CST_...
    #         "VL_BC_ISSQN": 0,  # Valor da base de cálculo do ISSQN
    #         "ALIQ_ISSQN": 0,  # Alíquota do ISSQN
    #         "VL_ISSQN": 0,  # Valor do ISSQN
    #         "VL_BC_ICMS": 0,  # Base de cálculo do ICMS acumulada relativa à alíq...
    #         "VL_ICMS": 0,  # Valor do ICMS acumulado relativo à alíquota informad...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroD400(models.Model):
    "Resumo do Movimento Diário"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d400"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d400"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "COD_SIT": 0,  # Código da situação do documento fiscal, conforme a T...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal resumo.
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "VL_DOC": 0,  # Valor total do documento fiscal
    #         "VL_DESC": 0,  # Valor acumulado dos descontos
    #         "VL_SERV": 0,  # Valor acumulado da prestação de serviço
    #         "VL_BC_ICMS": 0,  # Valor total da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor total do ICMS
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/creditad...
    #     }


class RegistroD410(models.Model):
    "Documentos Informados"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d410"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d410"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal , conforme a Ta...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC_INI": 0,  # Número do documento fiscal inicial (mesmo modelo...
    #         "NUM_DOC_FIN": 0,  # Número do documento fiscal final(mesmo modelo, s...
    #         "DT_DOC": 0,  # Data da emissão dos documentos fiscais
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor total acumulado das operações correspondentes à...
    #         "VL_DESC": 0,  # Valor acumulado dos descontos
    #         "VL_SERV": 0,  # Valor acumulado da prestação de serviço
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS
    #     }


class RegistroD411(models.Model):
    "Documentos Cancelados dos Documentos Informados"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d411"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d411"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_DOC_CANC": 0,  # Número do documento fiscal cancelado
    #     }


class RegistroD420(models.Model):
    "Complemento dos Documentos Informados"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d420"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d420"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MUN_ORIG": 0,  # Código do município de origem do serviço, confo...
    #         "VL_SERV": 0,  # Valor total da prestação de serviço
    #         "VL_BC_ICMS": 0,  # Valor total da base de cálculo do ICMS
    #     }


class RegistroD500(models.Model):
    "Nota Fiscal de Serviço de Comunicação"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d500"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d500"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_OPER": 0,  # Indicador do tipo de operação: 0- Aquisição; 1- Pre...
    #         "IND_EMIT": 0,  # Indicador do emitente do documento fiscal: 0- Emiss...
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "COD_SIT": 0,  # Código da situação do documento fiscal, conforme a T...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "DT_A_P": 0,  # Data da entrada (aquisição) ou da saída (prestação do...
    #         "VL_DOC": 0,  # Valor total do documento fiscal
    #         "VL_DESC": 0,  # Valor total do desconto
    #         "VL_SERV": 0,  # Valor da prestação de serviços
    #         "VL_SERV_NT": 0,  # Valor total dos serviços não-tributados pelo ICMS
    #         "VL_TERC": 0,  # Valores cobrados em nome de terceiros
    #         "VL_DA": 0,  # Valor de outras despesas indicadas no documento fiscal
    #         "VL_BC_ICMS": 0,  # Valor da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor do ICMS
    #         "COD_INF": 0,  # Código da informação complementar (campo 02 do Regis...
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/creditad...
    #         "TP_ASSINANTE": 0,  # Código do Tipo de Assinante: 1 - Comercial/Indu...
    #     }


class RegistroD510(models.Model):
    "Itens do Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d510"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d510"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_ITEM": 0,  # Número sequencial do item no documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "COD_CLASS": 0,  # Código de classificação do item do serviço de comu...
    #         "QTD": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor do item
    #         "VL_DESC": 0,  # Valor total do desconto
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #         "VL_BC_ICMS": 0,  # Valor da base de cálculo do ICMS
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_ICMS": 0,  # Valor do ICMS creditado/debitado
    #         "VL_BC_ICMS_UF": 0,  # Valor da base de cálculo do ICMS de outras UFs
    #         "VL_ICMS_UF": 0,  # Valor do ICMS de outras UFs
    #         "IND_REC": 0,  # Indicador do tipo de receita: 0- Receita própria - s...
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150) ...
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #         "COD_CTA": 0,  # Código da conta analítica contábil
    #     }


class RegistroD530(models.Model):
    "Terminal Faturado"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d530"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d530"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_SERV": 0,  # Indicador do tipo de serviço prestado: 0 - Telefoni...
    #         "DT_INI_SERV": 0,  # Data em que se iniciou a prestação do serviço
    #         "DT_FIN_SERV": 0,  # Data em que se encerrou a prestação do serviço
    #         "PER_FISCAL": 0,  # Período fiscal da prestação do serviço (MMAAAA)
    #         "COD_AREA": 0,  # Código de área do terminal faturado
    #         "TERMINAL": 0,  # Identificação do terminal faturado
    #     }


class RegistroD590(models.Model):
    "Registro Analítico do Documento"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d590"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d590"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação, conforme a tabel...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor da operação correspondente à combinação de CST_...
    #         "VL_BC_ICMS": 0,  # Parcela correspondente ao "Valor da base de cálcu...
    #         "VL_ICMS": 0,  # Parcela correspondente ao "Valor do ICMS" referente ...
    #         "VL_BC_ICMS_UF": 0,  # Parcela correspondente ao valor da base de cál...
    #         "VL_ICMS_UF": 0,  # Parcela correspondente ao valor do ICMS de outras...
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "COD_OBS": 0,  # Código da observação (campo 02 do Registro 0460)
    #     }


class RegistroD600(models.Model):
    "Consolidação da Prestação de Serviços"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d600"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d600"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "COD_MUN": 0,  # Código do município dos terminais faturados, conform...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "COD_CONS": 0,  # Código de classe de consumo dos serviços de comunic...
    #         "QTD_CONS": 0,  # Quantidade de documentos consolidados neste registr...
    #         "DT_DOC": 0,  # Data dos documentos consolidados
    #         "VL_DOC": 0,  # Valor total acumulado dos documentos fiscais
    #         "VL_DESC": 0,  # Valor acumulado dos descontos
    #         "VL_SERV": 0,  # Valor acumulado das prestações de serviços tributado...
    #         "VL_SERV_NT": 0,  # Valor acumulado dos serviços não-tributados pelo ...
    #         "VL_TERC": 0,  # Valores cobrados em nome de terceiros
    #         "VL_DA": 0,  # Valor acumulado das despesas acessórias
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #     }


class RegistroD610(models.Model):
    "Itens do Documento Consolidado"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d610"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d610"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_CLASS": 0,  # Código de classificação do item do serviço de comu...
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade acumulada do item
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor acumulado do item
    #         "VL_DESC": 0,  # Valor acumulado dos descontos
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação conforme tabela i...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS debitado
    #         "VL_BC_ICMS_UF": 0,  # Valor da base de cálculo do ICMS de outras UFs
    #         "VL_ICMS_UF": 0,  # Valor do ICMS de outras UFs
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "VL_PIS": 0,  # Valor acumulado do PIS
    #         "VL_COFINS": 0,  # Valor acumulado da COFINS
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/creditad...
    #     }


class RegistroD690(models.Model):
    "Registro Analítico dos Documentos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d690"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d690"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação, conforme a tabel...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor da operação correspondente à combinação de CST_...
    #         "VL_BC_ICMS": 0,  # Parcela correspondente ao “Valor da base de cálcu...
    #         "VL_ICMS": 0,  # Parcela correspondente ao "Valor do ICMS" referente ...
    #         "VL_BC_ICMS_UF": 0,  # Parcela correspondente ao valor da base de cál...
    #         "VL_ICMS_UF": 0,  # Parcela correspondente ao valor do ICMS de outras...
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #     }


class RegistroD695(models.Model):
    "Consolidação da Prestação de Serviços"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d695"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d695"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "NRO_ORD_INI": 0,  # Número de ordem inicial
    #         "NRO_ORD_FIN": 0,  # Número de ordem final
    #         "DT_DOC_INI": 0,  # Data de emissão inicial dos documentos / Data ini...
    #         "DT_DOC_FIN": 0,  # Data de emissão final dos documentos / Data final...
    #         "NOM_MEST": 0,  # Nome do arquivo Mestre de Documento Fiscal
    #         "CHV_COD_DIG": 0,  # Chave de codificação digital do arquivo Mestre d...
    #     }


class RegistroD696(models.Model):
    "Registro Analítico dos Documentos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d696"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d696"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação, conforme a tabel...
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_OPR": 0,  # Valor da operação correspondente à combinação de CST_...
    #         "VL_BC_ICMS": 0,  # Parcela correspondente ao "Valor da base de cálcu...
    #         "VL_ICMS": 0,  # Parcela correspondente ao "Valor do ICMS" referente ...
    #         "VL_BC_ICMS_UF": 0,  # Parcela correspondente ao valor da base de cál...
    #         "VL_ICMS_UF": 0,  # Parcela correspondente ao valor do ICMS de outras...
    #         "VL_RED_BC": 0,  # Valor não tributado em função da redução da base d...
    #         "COD_OBS": 0,  # Código da observação do lançamento fiscal (campo 02 ...
    #     }


class RegistroD697(models.Model):
    "Registro de informações de outras UFs"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.d697"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.d697"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "UF": 0,  # Sigla da unidade da federação
    #         "VL_BC_ICMS": 0,  # Valor da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor do ICMS
    #     }


class RegistroE100(models.Model):
    "Período de Apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e100"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e100"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_INI": 0,  # Data inicial a que a apuração se refere
    #         "DT_FIN": 0,  # Data final a que a apuração se refere
    #     }


class RegistroE110(models.Model):
    "Apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e110"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e110"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_TOT_DEBITOS": 0,  # Valor total dos débitos por "Saídas e prestaç...
    #         "VL_AJ_DEBITOS": 0,  # Valor total dos ajustes a débito decorrentes d...
    #         "VL_TOT_AJ_DEBITOS": 0,  # Valor total de "Ajustes a débito"
    #         "VL_ESTORNOS_CRED": 0,  # Valor total de Ajustes “Estornos de crédito...
    #         "VL_TOT_CREDITOS": 0,  # Valor total dos créditos por "Entradas e aqu...
    #         "VL_AJ_CREDITOS": 0,  # Valor total dos ajustes a crédito decorrentes...
    #         "VL_TOT_AJ_CREDITOS": 0,  # Valor total de "Ajustes a crédito"
    #         "VL_ESTORNOS_DEB": 0,  # Valor total de Ajustes “Estornos de Débitos”
    #         "VL_SLD_CREDOR_ANT": 0,  # Valor total de "Saldo credor do período an...
    #         "VL_SLD_APURADO": 0,  # Valor do saldo devedor apurado
    #         "VL_TOT_DED": 0,  # Valor total de "Deduções"
    #         "VL_ICMS_RECOLHER": 0,  # Valor total de "ICMS a recolher (11-12)
    #         "VL_SLD_CREDOR_TRANSPORTAR": 0,  # Valor total de "Saldo credor a tra...
    #         "DEB_ESP": 0,  # Valores recolhidos ou a recolher, extra-apuração.
    #     }


class RegistroE111(models.Model):
    "Ajuste/Benefício/Incentivo da Apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e111"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e111"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_AJ_APUR": 0,  # Código do ajuste da apuração e dedução, conforme...
    #         "DESCR_COMPL_AJ": 0,  # Descrição complementar do ajuste da apuração
    #         "VL_AJ_APUR": 0,  # Valor do ajuste da apuração
    #     }


class RegistroE112(models.Model):
    "Informações Adicionais dos Ajustes da Apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e112"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e112"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_DA": 0,  # Número do documento de arrecadação estadual, se houve...
    #         "NUM_PROC": 0,  # Número do processo ao qual o ajuste está vinculado,...
    #         "IND_PROC": 0,  # Indicador da origem do processo: 0- Sefaz; 1- Justi...
    #         "PROC": 0,  # Descrição resumida do processo que embasou o lançamento
    #         "TXT_COMPL": 0,  # Descrição complementar
    #     }


class RegistroE113(models.Model):
    "Informações Adicionais dos Ajustes da Apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e113"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e113"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "VL_AJ_ITEM": 0,  # Valor do ajuste para a operação/item
    #     }


class RegistroE115(models.Model):
    "Informações Adicionais da Apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e115"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e115"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_INF_ADIC": 0,  # Código da informação adicional conforme tabela ...
    #         "VL_INF_ADIC": 0,  # Valor referente à informação adicional
    #         "DESCR_COMPL_AJ": 0,  # Descrição complementar do ajuste
    #     }


class RegistroE116(models.Model):
    "Obrigações do ICMS Recolhido ou a Recolher"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e116"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e116"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_OR": 0,  # Código da obrigação a recolher, conforme a Tabela 5.4
    #         "VL_OR": 0,  # Valor da obrigação a recolher
    #         "DT_VCTO": 0,  # Data de vencimento da obrigação
    #         "COD_REC": 0,  # Código de receita referente à obrigação, próprio da ...
    #         "NUM_PROC": 0,  # Número do processo ou auto de infração ao qual a ob...
    #         "IND_PROC": 0,  # Indicador da origem do processo: 0- SEFAZ; 1- Justi...
    #         "PROC": 0,  # Descrição resumida do processo que embasou o lançamento
    #         "TXT_COMPL": 0,  # Descrição complementar das obrigações a recolher.
    #         "MES_REF": 0,  # Informe o mês de referência no formato “mmaaaa”
    #     }


class RegistroE200(models.Model):
    "Período de Apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e200"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e200"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "UF": 0,  # Sigla da unidade da federação a que se refere a apuração ...
    #         "DT_INI": 0,  # Data inicial a que a apuração se refere
    #         "DT_FIN": 0,  # Data final a que a apuração se refere
    #     }


class RegistroE210(models.Model):
    "Apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e210"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e210"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_MOV_ST": 0,  # Indicador de movimento: 0 – Sem operações com ST ...
    #         "VL_SLD_CRED_ANT_ST": 0,  # Valor do "Saldo credor de período anterio...
    #         "VL_DEVOL_ST": 0,  # Valor total do ICMS ST de devolução de mercadori...
    #         "VL_RESSARC_ST": 0,  # Valor total do ICMS ST de ressarcimentos
    #         "VL_OUT_CRED_ST": 0,  # Valor total de Ajustes "Outros créditos ST" e...
    #         "VL_AJ_CREDITOS_ST": 0,  # Valor total dos ajustes a crédito de ICMS ...
    #         "VL_RETENCAO_ST": 0,  # Valor Total do ICMS retido por Substituição T...
    #         "VL_OUT_DEB_ST": 0,  # Valor Total dos ajustes "Outros débitos ST" " ...
    #         "VL_AJ_DEBITOS_ST": 0,  # Valor total dos ajustes a débito de ICMS ST...
    #         "VL_SLD_DEV_ANT_ST": 0,  # Valor total de Saldo devedor antes das ded...
    #         "VL_DEDUCOES_ST": 0,  # Valor total dos ajustes "Deduções ST"
    #         "VL_ICMS_RECOL_ST": 0,  # Imposto a recolher ST (11-12)
    #         "VL_SLD_CRED_ST_TRANSPORTAR": 0,  # Saldo credor de ST a transportar ...
    #         "DEB_ESP_ST": 0,  # Valores recolhidos ou a recolher, extra-apuração.
    #     }


class RegistroE220(models.Model):
    "Ajuste/Benefício/Incentivo da Apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e220"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e220"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_AJ_APUR": 0,  # Código do ajuste da apuração e dedução, conforme...
    #         "DESCR_COMPL_AJ": 0,  # Descrição complementar do ajuste da apuração
    #         "VL_AJ_APUR": 0,  # Valor do ajuste da apuração
    #     }


class RegistroE230(models.Model):
    "Informações Adicionais dos Ajustes da Apuração do ICMS Substituição Tributá- ria"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e230"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e230"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_DA": 0,  # Número do documento de arrecadação estadual, se houve...
    #         "NUM_PROC": 0,  # Número do processo ao qual o ajuste está vinculado,...
    #         "IND_PROC": 0,  # Indicador da origem do processo: 0 - Sefaz; 1 - Jus...
    #         "PROC": 0,  # Descrição resumida do processo que embasou o lançamento
    #         "TXT_COMPL": 0,  # Descrição complementar
    #     }


class RegistroE240(models.Model):
    "Informações Adicionais dos Ajustes da Apuração do ICMS Substituição Tributá- ria"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e240"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e240"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "VL_AJ_ITEM": 0,  # Valor do ajuste para a operação/item
    #         "CHV_DOCe": 0,  # Chave do Documento Eletrônico
    #     }


class RegistroE250(models.Model):
    "Obrigações do ICMS a Recolher"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e250"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e250"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_OR": 0,  # Código da obrigação a recolher, conforme a Tabela 5.4
    #         "VL_OR": 0,  # Valor da obrigação ICMS ST a recolher
    #         "DT_VCTO": 0,  # Data de vencimento da obrigação
    #         "COD_REC": 0,  # Código de receita referente à obrigação, próprio da ...
    #         "NUM_PROC": 0,  # Número do processo ou auto de infração ao qual a ob...
    #         "IND_PROC": 0,  # Indicador da origem do processo: 0- SEFAZ; 1- Justi...
    #         "PROC": 0,  # Descrição resumida do processo que embasou o lançamento
    #         "TXT_COMPL": 0,  # Descrição complementar das obrigações a recolher
    #         "MES_REF": 0,  # Informe o mês de referência no formato “mmaaaa”
    #     }


class RegistroE300(models.Model):
    "Período de Apuração do ICMS Diferencial de Alíquota – UF Origem/Destino EC 87/15"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e300"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e300"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "UF": 0,  # Sigla da unidade da federação a que se refere à apuração ...
    #         "DT_INI": 0,  # Data inicial a que a apuração se refere
    #         "DT_FIN": 0,  # Data final a que a apuração se refere
    #     }


class RegistroE310(models.Model):
    "Apuração do ICMS Diferencial de Alíquota – UF Origem/Destino EC 87/15"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e310"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e310"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_MOV_DIFAL": 0,  # Indicador de movimento: 0 – Sem operações com ...
    #         "VL_SLD_CRED_ANT_DIFAL": 0,  # Valor do "Saldo credor de período ante...
    #         "VL_TOT_DEBITOS_DIFAL": 0,  # Valor total dos débitos por "Saídas e p...
    #         "VL_OUT_DEB_DIFAL": 0,  # Valor Total dos ajustes "Outros débitos ICM...
    #         "VL_TOT_DEB_FCP": 0,  # Valor total dos débitos FCP por "Saídas e pre...
    #         "VL_TOT_CREDITOS_DIFAL": 0,  # Valor total dos créditos do ICMS refer...
    #         "VL_TOT_CRED_FCP": 0,  # Valor total dos créditos FCP por Entradas
    #         "VL_OUT_CRED_DIFAL": 0,  # Valor total de Ajustes "Outros créditos IC...
    #         "VL_SLD_DEV_ANT_DIFAL": 0,  # Valor total de Saldo devedor ICMS Difer...
    #         "VL_DEDUCOES_DIFAL": 0,  # Valor total dos ajustes "Deduções ICMS Dif...
    #         "VL_RECOL": 0,  # Valor recolhido ou a recolher referente a FCP e Imp...
    #         "VL_SLD_CRED_TRANSPOR": 0,  # Saldo credor a transportar para o perío...
    #         "DEB_ESP_DIFAL": 0,  # Valores recolhidos ou a recolher, extra-apuraç...
    #         "VL_OUT_DEB_FCP": 0,  # Valor total dos ajustes "Outros débitos FCP" ...
    #         "VL_TOT_CRED_FCP_INDEX_16": 0,  # Valor total dos créditos FCP por En...
    #         "VL_OUT_CRED_FCP": 0,  # Valor total de Ajustes "Outros créditos FCP"...
    #         "VL_SLD_DEV_ANT_FCP": 0,  # Valor total de Saldo devedor FCP antes da...
    #         "VL_DEDUCOES_FCP": 0,  # Valor total das deduções "FCP"
    #         "VL_RECOL_FCP": 0,  # Valor recolhido ou a recolher referente ao FCP ...
    #         "VL_SLD_CRED_TRANSPORTAR_FCP": 0,  # Saldo credor a transportar para ...
    #         "DEB_ESP_FCP": 0,  # Valores recolhidos ou a recolher, extra-apuração...
    #     }


class RegistroE311(models.Model):
    "Ajuste/Benefício/Incentivo da Apuração do ICMS Diferencial de Alíquota – UF Origem/Destino EC 87/15"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e311"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e311"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_AJ_APUR": 0,  # Código do ajuste da apuração e dedução, conforme...
    #         "DESCR_COMPL_AJ": 0,  # Descrição complementar do ajuste da apuração
    #         "VL_AJ_APUR": 0,  # Valor do ajuste da apuração
    #     }


class RegistroE312(models.Model):
    "Informações Adicionais dos Ajustes da Apuração do ICMS Diferencial"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e312"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e312"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_DA": 0,  # Número do documento de arrecadação estadual, se houve...
    #         "NUM_PROC": 0,  # Número do processo ao qual o ajuste está vinculado,...
    #         "IND_PROC": 0,  # Indicador da origem do processo: 0- Sefaz; 1- Justi...
    #         "PROC": 0,  # Descrição resumida do processo que embasou o lançamento
    #         "TXT_COMPL": 0,  # Descrição complementar
    #     }


class RegistroE313(models.Model):
    "Informações Adicionais da Apuração do ICMS Diferencial"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e313"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e313"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150)
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "CHV_DOCe": 0,  # Chave do Documento Eletrônico
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "VL_AJ_ITEM": 0,  # Valor do ajuste para a operação/item
    #     }


class RegistroE316(models.Model):
    "Obrigações do ICMS recolhido ou a recolher – Diferencial de Alíquota – UF Origem/Destino EC 87/15"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e316"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e316"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_OR": 0,  # Código da obrigação recolhida ou a recolher, conforme...
    #         "VL_OR": 0,  # Valor da obrigação recolhida ou a recolher
    #         "DT_VCTO": 0,  # Data de vencimento da obrigação
    #         "COD_REC": 0,  # Código de receita referente à obrigação, próprio da ...
    #         "NUM_PROC": 0,  # Número do processo ou auto de infração ao qual a ob...
    #         "IND_PROC": 0,  # Indicador da origem do processo: 0- SEFAZ; 1- Justi...
    #         "PROC": 0,  # Descrição resumida do processo que embasou o lançamento
    #         "TXT_COMPL": 0,  # Descrição complementar das obrigações recolhidas o...
    #         "MES_REF": 0,  # Informe o mês de referência no formato “mmaaaa”
    #     }


class RegistroE500(models.Model):
    "Período de Apuração do IPI"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e500"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e500"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_APUR": 0,  # Indicador de período de apuração do IPI: 0 - Mensal...
    #         "DT_INI": 0,  # Data inicial a que a apuração se refere
    #         "DT_FIN": 0,  # Data final a que a apuração se refere
    #     }


class RegistroE510(models.Model):
    "Consolidação dos Valores de IPI"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e510"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e510"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação do agrupamento de...
    #         "CST_IPI": 0,  # Código da Situação Tributária referente ao IPI, conf...
    #         "VL_CONT_IPI": 0,  # Parcela correspondente ao "Valor Contábil" refer...
    #         "VL_BC_IPI": 0,  # Parcela correspondente ao "Valor da base de cálcul...
    #         "VL_IPI": 0,  # Parcela correspondente ao "Valor do IPI" referente ao...
    #     }


class RegistroE520(models.Model):
    "Apuração do IPI"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e520"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e520"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_SD_ANT_IPI": 0,  # Saldo credor do IPI transferido do período ant...
    #         "VL_DEB_IPI": 0,  # Valor total dos débitos por "Saídas com débito do...
    #         "VL_CRED_IPI": 0,  # Valor total dos créditos por "Entradas e aquisiç...
    #         "VL_OD_IPI": 0,  # Valor de "Outros débitos" do IPI (inclusive estorn...
    #         "VL_OC_IPI": 0,  # Valor de "Outros créditos" do IPI (inclusive estor...
    #         "VL_SC_IPI": 0,  # Valor do saldo credor do IPI a transportar para o ...
    #         "VL_SD_IPI": 0,  # Valor do saldo devedor do IPI a recolher
    #     }


class RegistroE530(models.Model):
    "Ajustes da Apuração do IPI"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e530"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e530"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_AJ": 0,  # Indicador do tipo de ajuste: 0- Ajuste a débito; 1- A...
    #         "VL_AJ": 0,  # Valor do ajuste
    #         "COD_AJ": 0,  # Código do ajuste da apuração, conforme a Tabela indic...
    #         "IND_DOC": 0,  # Indicador da origem do documento vinculado ao ajuste...
    #         "NUM_DOC": 0,  # Número do documento / processo / declaração ao qual ...
    #         "DESCR_AJ": 0,  # Descrição detalhada do ajuste, com citação dos docu...
    #     }


class RegistroE531(models.Model):
    "Informações adicionais dos ajustes da apuração do IPI – Identificação dos documentos fiscais"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.e531"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.e531"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "VL_AJ_ITEM": 0,  # Valor do ajuste para a operação/item
    #         "CHV_NFE": 0,  # Chave da Nota Fiscal Eletrônica (modelo 55)
    #     }


class RegistroG110(models.Model):
    "ICMS – Ativo Permanente – CIAP"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.g110"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.g110"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_INI": 0,  # Data inicial a que a apuração se refere
    #         "DT_FIN": 0,  # Data final a que a apuração se refere
    #         "SALDO_IN_ICMS": 0,  # Saldo inicial de ICMS do CIAP, composto por IC...
    #         "SOM_PARC": 0,  # Somatório das parcelas de ICMS passível de apropria...
    #         "VL_TRIB_EXP": 0,  # Valor do somatório das saídas tributadas e saída...
    #         "VL_TOTAL": 0,  # Valor total de saídas
    #         "IND_PER_SAI": 0,  # Índice de participação do valor do somatório das...
    #         "ICMS_APROP": 0,  # Valor de ICMS a ser apropriado na apuração do ICM...
    #         "SOM_ICMS_OC": 0,  # Valor de outros créditos a ser apropriado na Apu...
    #     }


class RegistroG125(models.Model):
    "Movimentação de bem ou componente"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.g125"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.g125"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_IND_BEM": 0,  # Código individualizado do bem ou componente adot...
    #         "DT_MOV": 0,  # Data da movimentação ou do saldo inicial
    #         "TIPO_MOV": 0,  # Tipo de movimentação do bem ou componente: SI = Sal...
    #         "VL_IMOB_ICMS_OP": 0,  # Valor do ICMS da Operação Própria na entrada...
    #         "VL_IMOB_ICMS_ST": 0,  # Valor do ICMS da Oper. por Sub. Tributária n...
    #         "VL_IMOB_ICMS_FRT": 0,  # Valor do ICMS sobre Frete do Conhecimento d...
    #         "VL_IMOB_ICMS_DIF": 0,  # Valor do ICMS - Diferencial de Alíquota, co...
    #         "NUM_PARC": 0,  # Número da parcela do ICMS
    #         "VL_PARC_PASS": 0,  # Valor da parcela de ICMS passível de apropriaçã...
    #     }


class RegistroG126(models.Model):
    "Outros créditos CIAP"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.g126"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.g126"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_INI": 0,  # Data inicial do período de apuração
    #         "DT_FIM": 0,  # Data final do período de apuração
    #         "NUM_PARC": 0,  # Número da parcela do ICMS
    #         "VL_PARC_PASS": 0,  # Valor da parcela de ICMS passível de apropriaçã...
    #         "VL_TRIB_OC": 0,  # Valor do somatório das saídas tributadas e saídas...
    #         "VL_TOTAL": 0,  # Valor total de saídas no período indicado neste reg...
    #         "IND_PER_SAI": 0,  # Índice de participação do valor do somatório das...
    #         "VL_PARC_APROP": 0,  # Valor de outros créditos de ICMS a ser apropri...
    #     }


class RegistroG130(models.Model):
    "Identificação do documento fiscal"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.g130"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.g130"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_EMIT": 0,  # Indicador do emitente do documento fiscal: 0- Emiss...
    #         "COD_PART": 0,  # Código do participante : - do emitente do documento...
    #         "COD_MOD": 0,  # Código do modelo de documento fiscal, conforme tabel...
    #         "SERIE": 0,  # Série do documento fiscal
    #         "NUM_DOC": 0,  # Número de documento fiscal
    #         "CHV_NFE_CTE": 0,  # Chave do documento fiscal eletrônico
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "NUM_DA": 0,  # Número do documento de arrecadação estadual, se houve...
    #     }


class RegistroG140(models.Model):
    "Identificação do item do documento fiscal"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.g140"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.g140"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_ITEM": 0,  # Número sequencial do item no documento fiscal
    #         "COD_ITEM": 0,  # Código correspondente do bem no documento fiscal (c...
    #         "QTDE": 0,  # Quantidade, deste item da nota fiscal, que foi aplicada...
    #         "UNID": 0,  # Unidade do item constante no documento fiscal de entrad...
    #         "VL_ICMS_OP_APLICADO": 0,  # Valor do ICMS da Operação Própria na ent...
    #         "VL_ICMS_ST_APLICADO": 0,  # Valor do ICMS ST na entrada do item, pro...
    #         "VL_ICMS_FRT_APLICADO": 0,  # Valor do ICMS sobre Frete do Conhecimen...
    #         "VL_ICMS_DIF_APLICADO": 0,  # Valor do ICMS Diferencial de Alíquota, ...
    #     }


class RegistroH005(models.Model):
    "Totais do Inventário"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.h005"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.h005"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_INV": 0,  # Data do inventário
    #         "VL_INV": 0,  # Valor total do estoque
    #         "MOT_INV": 0,  # Informe o motivo do Inventário: 01 – No final no per...
    #     }


class RegistroH010(models.Model):
    "Inventário"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.h010"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.h010"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "UNID": 0,  # Unidade do item
    #         "QTD": 0,  # Quantidade do item
    #         "VL_UNIT": 0,  # Valor unitário do item
    #         "VL_ITEM": 0,  # Valor do item
    #         "IND_PROP": 0,  # Indicador de propriedade/posse do item: 0- Item de ...
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "TXT_COMPL": 0,  # Descrição complementar.
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/creditad...
    #         "VL_ITEM_IR": 0,  # Valor do item para efeitos do Imposto de Renda.
    #     }


class RegistroH020(models.Model):
    "Informação complementar do Inventário"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.h020"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.h020"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "CST_ICMS": 0,  # Código da Situação Tributária referente ao ICMS, co...
    #         "BC_ICMS": 0,  # Informe a base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Informe o valor do ICMS a ser debitado ou creditado
    #     }


class RegistroH030(models.Model):
    "Informações complementares do inventário das mercadorias sujeitas ao regime"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.h030"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.h030"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_ICMS_OP": 0,  # Valor médio unitário do ICMS OP
    #         "VL_BC_ICMS_ST": 0,  # Valor médio unitário da base de cálculo do ICM...
    #         "VL_ICMS_ST": 0,  # Valor médio unitário do ICMS ST
    #         "VL_FCP": 0,  # Valor médio unitário do FCP
    #     }


class RegistroK100(models.Model):
    "Período de Apuração do ICMS/IPI"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k100"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k100"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_INI": 0,  # Data inicial a que a apuração se refere
    #         "DT_FIN": 0,  # Data final a que a apuração se refere
    #     }


class RegistroK200(models.Model):
    "Estoque Escriturado"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k200"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k200"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_EST": 0,  # Data do estoque final
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade em estoque
    #         "IND_EST": 0,  # Indicador do tipo de estoque: 0 - Estoque de proprie...
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #     }


class RegistroK210(models.Model):
    "Desmontagem de mercadorias – Item de Origem"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k210"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k210"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_INI_OS": 0,  # Data de início da ordem de serviço
    #         "DT_FIN_OS": 0,  # Data de conclusão da ordem de serviço
    #         "COD_DOC_OS": 0,  # Código de identificação da ordem de serviço
    #         "COD_ITEM_ORI": 0,  # Código do item de origem (campo 02 do Registro ...
    #         "QTD_ORI": 0,  # Quantidade de origem – saída do estoque
    #     }


class RegistroK215(models.Model):
    "Desmontagem de mercadorias – Item de Destino"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k215"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k215"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM_DES": 0,  # Código do item de destino (campo 02 do Registro...
    #         "QTD_DES": 0,  # Quantidade de destino – entrada em estoque
    #     }


class RegistroK220(models.Model):
    "Outras Movimentações Internas entre Mercadorias"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k220"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k220"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_MOV": 0,  # Data da movimentação interna
    #         "COD_ITEM_ORI": 0,  # Código do item de origem (campo 02 do Registro ...
    #         "COD_ITEM_DEST": 0,  # Código do item de destino (campo 02 do Registr...
    #         "QTD_ORI": 0,  # Quantidade movimentada do item de origem
    #         "QTD_DEST": 0,  # Quantidade movimentada do item de destino
    #     }


class RegistroK230(models.Model):
    "Itens Produzidos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k230"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k230"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_INI_OP": 0,  # Data de início da ordem de produção
    #         "DT_FIN_OP": 0,  # Data de conclusão da ordem de produção
    #         "COD_DOC_OP": 0,  # Código de identificação da ordem de produção
    #         "COD_ITEM": 0,  # Código do item produzido (campo 02 do Registro 0200...
    #         "QTD_ENC": 0,  # Quantidade de produção acabada
    #     }


class RegistroK235(models.Model):
    "Insumos Consumidos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k235"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k235"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_SAIDA": 0,  # Data de saída do estoque para alocação ao produto
    #         "COD_ITEM": 0,  # Código do item componente/insumo (campo 02 do Regis...
    #         "QTD": 0,  # Quantidade consumida do item
    #         "COD_INS_SUBST": 0,  # Código do insumo que foi substituído, caso oco...
    #     }


class RegistroK250(models.Model):
    "Industrialização Efetuada por Terceiros – Itens Produzidos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k250"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k250"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_PROD": 0,  # Data do reconhecimento da produção ocorrida no terce...
    #         "COD_ITEM": 0,  # Código do item produzido (campo 02 do Registro 0200...
    #         "QTD": 0,  # Quantidade produzida
    #     }


class RegistroK255(models.Model):
    "Industrialização em Terceiros – Insumos Consumidos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k255"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k255"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_CONS": 0,  # Data do reconhecimento do consumo do insumo referent...
    #         "COD_ITEM": 0,  # Código do insumo (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade de consumo do insumo.
    #         "COD_INS_SUBST": 0,  # Código do insumo que foi substituído, caso oco...
    #     }


class RegistroK260(models.Model):
    "Reprocessamento/Reparo de Produto/Insumo"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k260"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k260"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_OP_OS": 0,  # Código de identificação da ordem de produção, no r...
    #         "COD_ITEM": 0,  # Código do produto/insumo a ser reprocessado/reparad...
    #         "DT_SAIDA": 0,  # Data de saída do estoque
    #         "QTD_SAIDA": 0,  # Quantidade de saída do estoque
    #         "DT_RET": 0,  # Data de retorno ao estoque (entrada)
    #         "QTD_RET": 0,  # Quantidade de retorno ao estoque (entrada)
    #     }


class RegistroK265(models.Model):
    "Reprocessamento/Reparo – Mercadorias Consumidas e/ou Retornadas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k265"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k265"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código da mercadoria (campo 02 do Registro 0200)
    #         "QTD_CONS": 0,  # Quantidade consumida – saída do estoque
    #         "QTD_RET": 0,  # Quantidade retornada – entrada em estoque
    #     }


class RegistroK270(models.Model):
    "Correção de Apontamento dos Registros K210"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k270"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k270"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_INI_AP": 0,  # Data inicial do período de apuração em que ocorreu...
    #         "DT_FIN_AP": 0,  # Data final do período de apuração em que ocorreu o...
    #         "COD_OP_OS": 0,  # Código de identificação da ordem de produção ou da...
    #         "COD_ITEM": 0,  # Código da mercadoria que está sendo corrigido (camp...
    #         "QTD_COR_POS": 0,  # Quantidade de correção positiva de apontamento o...
    #         "QTD_COR_NEG": 0,  # Quantidade de correção negativa de apontamento o...
    #         "ORIGEM": 0,  # 1 – correção de apontamento de produção e/ou consumo ...
    #     }


class RegistroK275(models.Model):
    "Correção de Apontamento e Retorno de Insumos dos Registros K215"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k275"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k275"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código da mercadoria (campo 02 do Registro 0200)
    #         "QTD_COR_POS": 0,  # Quantidade de correção positiva de apontamento o...
    #         "QTD_COR_NEG": 0,  # Quantidade de correção negativa de apontamento o...
    #         "COD_INS_SUBST": 0,  # Código do insumo que foi substituído, caso oco...
    #     }


class RegistroK280(models.Model):
    "Correção de Apontamento – Estoque Escriturado"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k280"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k280"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_EST": 0,  # Data do estoque final escriturado que está sendo corr...
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "QTD_COR_POS": 0,  # Quantidade de correção positiva de apontamento o...
    #         "QTD_COR_NEG": 0,  # Quantidade de correção negativa de apontamento o...
    #         "IND_EST": 0,  # Indicador do tipo de estoque: 0 = Estoque de proprie...
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #     }


class RegistroK290(models.Model):
    "Produção Conjunta – Ordem de Produção"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k290"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k290"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_INI_OP": 0,  # Data de início da ordem de produção
    #         "DT_FIN_OP": 0,  # Data de conclusão da ordem de produção
    #         "COD_DOC_OP": 0,  # Código de identificação da ordem de produção
    #     }


class RegistroK291(models.Model):
    "Produção Conjunta – Itens Produzidos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k291"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k291"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do item produzido (campo 02 do Registro 0200...
    #         "QTD": 0,  # Quantidade de produção acabada
    #     }


class RegistroK292(models.Model):
    "Produção Conjunta – insumos Consumidos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k292"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k292"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do insumo/componente consumido (campo 02 do ...
    #         "QTD": 0,  # Quantidade consumida
    #     }


class RegistroK300(models.Model):
    "Produção Conjunta – Industrialização efetuada por terceiros"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k300"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k300"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_PROD": 0,  # Data do reconhecimento da produção ocorrida no terce...
    #     }


class RegistroK301(models.Model):
    "Produção Conjunta – Industrialização efetuada por terceiros – Itens Produzidos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k301"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k301"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do item produzido (campo 02 do Registro 0200...
    #         "QTD": 0,  # Quantidade produzida
    #     }


class RegistroK302(models.Model):
    "Produção Conjunta – Industrialização efetuada por terceiros – Insumos Consumidos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.k302"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.k302"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do insumo (campo 02 do Registro 0200)
    #         "QTD": 0,  # Quantidade consumida
    #     }


class Registro1010(models.Model):
    "Obrigatoriedade de registros do Bloco 1"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1010"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1010"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_EXP": 0,  # Reg. 1100 - Ocorreu averbação (conclusão) de exporta...
    #         "IND_CCRF": 0,  # Reg 1200 – Existem informações acerca de créditos d...
    #         "IND_COMB": 0,  # Reg. 1300 – É comércio varejista de combustíveis co...
    #         "IND_USINA": 0,  # Reg. 1390 – Usinas de açúcar e/álcool – O estabele...
    #         "IND_VA": 0,  # Reg 1400 - Sendo o registro obrigatório em sua Unidad...
    #         "IND_EE": 0,  # Reg 1500 - A empresa é distribuidora de energia e oco...
    #         "IND_CART": 0,  # Reg 1601 - Realizou vendas com instrumentos eletrôn...
    #         "IND_FORM": 0,  # Reg. 1700 - Foram emitidos documentos fiscais em pa...
    #         "IND_AER": 0,  # Reg 1800 - A empresa prestou serviços de transporte ...
    #         "IND_GIAF1": 0,  # Reg. 1960 - Possui informações GIAF1? S – Sim; N –...
    #         "IND_GIAF3": 0,  # Reg. 1970 - Possui informações GIAF3? S – Sim; N –...
    #         "IND_GIAF4": 0,  # Reg. 1980 - Possui informações GIAF4? S – Sim; N –...
    #         "IND_REST_RESSARC_COMPL_ICMS": 0,  # Reg. 1250 – Possui informações c...
    #     }


class Registro1100(models.Model):
    "Registro de Informações sobre Exportação"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1100"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1100"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_DOC": 0,  # Informe o tipo de documento: 0 – Declaração de Expor...
    #         "NRO_DE": 0,  # Número da declaração
    #         "DT_DE": 0,  # Data da declaração (DDMMAAAA)
    #         "NAT_EXP": 0,  # Preencher com: 0 - Exportação Direta 1 - Exportação ...
    #         "NRO_RE": 0,  # Nº do registro de Exportação
    #         "DT_RE": 0,  # Data do Registro de Exportação (DDMMAAAA)
    #         "CHC_EMB": 0,  # Nº do conhecimento de embarque
    #         "DT_CHC": 0,  # Data do conhecimento de embarque (DDMMAAAA)
    #         "DT_AVB": 0,  # Data da averbação da Declaração de exportação (ddmmaa...
    #         "TP_CHC": 0,  # Informação do tipo de conhecimento de embarque: 01 – ...
    #         "PAIS": 0,  # Código do país de destino da mercadoria (Preencher conf...
    #     }


class Registro1105(models.Model):
    "Documentos Fiscais de Exportação"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1105"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1105"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOD": 0,  # Código do modelo da NF, conforme tabela 4.1.1
    #         "SERIE": 0,  # Série da Nota Fiscal
    #         "NUM_DOC": 0,  # Número de Nota Fiscal de Exportação emitida pelo Exp...
    #         "CHV_NFE": 0,  # Chave da Nota Fiscal Eletrônica
    #         "DT_DOC": 0,  # Data da emissão da NF de exportação
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #     }


class Registro1110(models.Model):
    "Operações de Exportação Indireta"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1110"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1110"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código do participante-Fornecedor da Mercadoria des...
    #         "COD_MOD": 0,  # Código do documento fiscal, conforme a Tabela 4.1.1
    #         "SER": 0,  # Série do documento fiscal recebido com fins específicos ...
    #         "NUM_DOC": 0,  # Número do documento fiscal recebido com fins específ...
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal recebido com fins...
    #         "CHV_NFE": 0,  # Chave da Nota Fiscal Eletrônica
    #         "NR_MEMO": 0,  # Número do Memorando de Exportação
    #         "QTD": 0,  # Quantidade do item efetivamente exportado.
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #     }


class Registro1200(models.Model):
    "Controle de Créditos Fiscais - ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1200"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1200"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_AJ_APUR": 0,  # Código de ajuste, conforme informado na Tabela i...
    #         "SLD_CRED": 0,  # Saldo de créditos fiscais de períodos anteriores
    #         "CRED_APR": 0,  # Total de crédito apropriado no mês
    #         "CRED_RECEB": 0,  # Total de créditos recebidos por transferência
    #         "CRED_UTIL": 0,  # Total de créditos utilizados no período
    #         "SLD_CRED_FIM": 0,  # Saldo de crédito fiscal acumulado a transportar...
    #     }


class Registro1210(models.Model):
    "Utilização de Créditos Fiscais"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1210"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1210"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "TIPO_UTIL": 0,  # Tipo de utilização do crédito, conforme tabela ind...
    #         "NR_DOC": 0,  # Número do documento utilizado na baixa de créditos
    #         "VL_CRED_UTIL": 0,  # Total de crédito utilizado
    #         "CHV_DOCe": 0,  # Chave do Documento Eletrônico
    #     }


class Registro1250(models.Model):
    "Informações consolidadas de saldos de restituição"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1250"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1250"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_CREDITO_ICMS_OP": 0,  # Informar o valor total do ICMS operação p...
    #         "VL_ICMS_ST_REST": 0,  # Informar o valor total do ICMS ST que o info...
    #         "VL_FCP_ST_REST": 0,  # Informar o valor total do FCP_ST agregado ao ...
    #         "VL_ICMS_ST_COMPL": 0,  # Informar o valor total do débito referente ...
    #         "VL_FCP_ST_COMPL": 0,  # Informar o valor total do FCP_ST agregado ao...
    #     }


class Registro1255(models.Model):
    "Informações consolidadas de saldos de restituição"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1255"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1255"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_MOT_REST_COMPL": 0,  # Código do motivo da restituição ou comple...
    #         "VL_CREDITO_ICMS_OP_MOT": 0,  # Informar o valor total do ICMS operaç...
    #         "VL_ICMS_ST_REST_MOT": 0,  # Informar o valor total do ICMS ST que o ...
    #         "VL_FCP_ST_REST_MOT": 0,  # Informar o valor total do FCP_ST agregado...
    #         "VL_ICMS_ST_COMPL_MOT": 0,  # Informar o valor total do débito refere...
    #         "VL_FCP_ST_COMPL_MOT": 0,  # Informar o valor total do FCP_ST agregad...
    #     }


class Registro1300(models.Model):
    "Movimentação diária de combustíveis"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1300"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1300"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM": 0,  # Código do Produto, constante do registro 0200
    #         "DT_FECH": 0,  # Data do fechamento da movimentação
    #         "ESTQ_ABERT": 0,  # Estoque no início do dia, em litros
    #         "VOL_ENTR": 0,  # Volume Recebido no dia (em litros)
    #         "VOL_DISP": 0,  # Volume Disponível (04 + 05), em litros
    #         "VOL_SAIDAS": 0,  # Volume Total das Saídas, em litros
    #         "ESTQ_ESCR": 0,  # Estoque Escritural (06 – 07), litros
    #         "VAL_AJ_PERDA": 0,  # Valor da Perda, em litros
    #         "VAL_AJ_GANHO": 0,  # Valor do ganho, em litros
    #         "FECH_FISICO": 0,  # Estoque de Fechamento, em litros
    #     }


class Registro1310(models.Model):
    "Movimentação diária de combustíveis por tanque"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1310"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1310"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_TANQUE": 0,  # Tanque que armazena o combustível.
    #         "ESTQ_ABERT": 0,  # Estoque no inicio do dia, em litros
    #         "VOL_ENTR": 0,  # Volume Recebido no dia (em litros)
    #         "VOL_DISP": 0,  # Volume Disponível (03 + 04), em litros
    #         "VOL_SAIDAS": 0,  # Volume Total das Saídas, em litros
    #         "ESTQ_ESCR": 0,  # Estoque Escritural(05 – 06), litros
    #         "VAL_AJ_PERDA": 0,  # Valor da Perda, em litros
    #         "VAL_AJ_GANHO": 0,  # Valor do ganho, em litros
    #         "FECH_FISICO": 0,  # Volume aferido no tanque, em litros. Estoque de ...
    #     }


class Registro1320(models.Model):
    "Volume de vendas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1320"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1320"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_BICO": 0,  # Bico Ligado à Bomba
    #         "NR_INTERV": 0,  # Número da intervenção
    #         "MOT_INTERV": 0,  # Motivo da Intervenção
    #         "NOM_INTERV": 0,  # Nome do Interventor
    #         "CNPJ_INTERV": 0,  # CNPJ da empresa responsável pela intervenção
    #         "CPF_INTERV": 0,  # CPF do técnico responsável pela intervenção
    #         "VAL_FECHA": 0,  # Valor da leitura final do contador, no fechamento ...
    #         "VAL_ABERT": 0,  # Valor da leitura inicial do contador, na abertura ...
    #         "VOL_AFERI": 0,  # Aferições da Bomba, em litros
    #         "VOL_VENDAS": 0,  # Vendas (08 – 09 - 10 ) do bico , em litros
    #     }


class Registro1350(models.Model):
    "Bombas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1350"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1350"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "SERIE": 0,  # Número de Série da Bomba
    #         "FABRICANTE": 0,  # Nome do Fabricante da Bomba
    #         "MODELO": 0,  # Modelo da Bomba
    #         "TIPO_MEDICAO": 0,  # Identificador de medição: 0 – analógico 1 – dig...
    #     }


class Registro1360(models.Model):
    "Lacres das bombas"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1360"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1360"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_LACRE": 0,  # Número do Lacre associado na Bomba
    #         "DT_APLICACAO": 0,  # Data de aplicação do Lacre
    #     }


class Registro1370(models.Model):
    "Bicos da bomba"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1370"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1370"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_BICO": 0,  # Número sequencial do bico ligado a bomba
    #         "COD_ITEM": 0,  # Código do Produto, constante do registro 0200
    #         "NUM_TANQUE": 0,  # Tanque que armazena o combustível.
    #     }


class Registro1390(models.Model):
    "Controle de produção de Usina"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1390"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1390"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PROD": 0,  # Código do produto conforme tabela 5.8
    #     }


class Registro1391(models.Model):
    "Produção diária da usina"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1391"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1391"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_REGISTRO": 0,  # Data de produção (DDMMAAAA)
    #         "QTD_MOID": 0,  # Quantidade de insumo esmagado (toneladas)
    #         "ESTQ_INI": 0,  # Estoque inicial (litros / kg)
    #         "QTD_PRODUZ": 0,  # Quantidade produzida (litros / kg)
    #         "ENT_ANID_HID": 0,  # Entrada de álcool anidro decorrente da transfor...
    #         "OUTR_ENTR": 0,  # Outras entradas (litros / kg)
    #         "PERDA": 0,  # Evaporação (litros) ou Quebra de peso (kg)
    #         "CONS": 0,  # Consumo (litros)
    #         "SAI_ANI_HID": 0,  # Saída para transformação (litros).
    #         "SAIDAS": 0,  # Saídas (litros / kg)
    #         "ESTQ_FIN": 0,  # Estoque final (litros / kg)
    #         "ESTQ_INI_MEL": 0,  # Estoque inicial de mel residual (kg)
    #         "PROD_DIA_MEL": 0,  # Produção de mel residual (kg) e entradas de mel...
    #         "UTIL_MEL": 0,  # Mel residual utilizado (kg) e saídas de mel (kg)
    #         "PROD_ALC_MEL": 0,  # Produção de álcool (litros) ou açúcar (kg) prov...
    #         "OBS": 0,  # Observações
    #         "COD_ITEM": 0,  # Informar o insumo conforme código do item (campo 02...
    #         "TP_RESIDUO": 0,  # Tipo de resíduo produzido: 01 - Bagaço de cana 02...
    #         "QTD_RESIDUO": 0,  # Quantidade de resíduo produzido (toneladas)
    #     }


class Registro1400(models.Model):
    "Informação sobre Valor Agregado"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1400"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1400"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_ITEM_IPM": 0,  # Código do item (Tabela própria da unidade da fe...
    #         "MUN": 0,  # Código do Município de origem/destino
    #         "VALOR": 0,  # Valor mensal correspondente ao município
    #     }


class Registro1500(models.Model):
    "Nota fiscal/Conta de energia elétrica"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1500"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1500"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_OPER": 0,  # Indicador do tipo de operação: 1- Saída
    #         "IND_EMIT": 0,  # Indicador do emitente do documento fiscal: 0- Emiss...
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a
    #         "COD_SIT": 0,  # Código da situação do documento fiscal, conforme a T...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "COD_CONS": 0,  # Código de classe de consumo de energia elétrica: 01...
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "DT_E_S": 0,  # Data da entrada ou da saída
    #         "VL_DOC": 0,  # Valor total do documento fiscal
    #         "VL_DESC": 0,  # Valor total do desconto
    #         "VL_FORN": 0,  # Valor total fornecido/consumido
    #         "VL_SERV_NT": 0,  # Valor total dos serviços não-tributados pelo ICMS
    #         "VL_TERC": 0,  # Valor total cobrado em nome de terceiros
    #         "VL_DA": 0,  # Valor total de despesas acessórias indicadas no docume...
    #         "VL_BC_ICMS": 0,  # Valor acumulado da base de cálculo do ICMS
    #         "VL_ICMS": 0,  # Valor acumulado do ICMS
    #         "VL_BC_ICMS_ST": 0,  # Valor acumulado da base de cálculo do ICMS sub...
    #         "VL_ICMS_ST": 0,  # Valor acumulado do ICMS retido por substituição t...
    #         "COD_INF": 0,  # Código da informação complementar do documento fisca...
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #         "TP_LIGACAO": 0,  # Código de tipo de Ligação 1 - Monofásico 2 - Bifá...
    #         "COD_GRUPO_TENSAO": 0,  # Código de grupo de tensão: 01 - A1 - Alta T...
    #     }


class Registro1510(models.Model):
    "Itens do documento Nota fiscal/Conta de energia elétrica"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1510"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1510"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_ITEM": 0,  # Número sequencial do item no documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "COD_CLASS": 0,  # Código de classificação do item de energia elétric...
    #         "QTD": 0,  # Quantidade do item
    #         "UNID": 0,  # Unidade do item (Campo 02 do registro 0190)
    #         "VL_ITEM": 0,  # Valor do item
    #         "VL_DESC": 0,  # Valor total do desconto
    #         "CST_ICMS": 0,  # Código da Situação Tributária, conforme a Tabela in...
    #         "CFOP": 0,  # Código Fiscal de Operação e Prestação
    #         "VL_BC_ICMS": 0,  # Valor da base de cálculo do ICMS
    #         "ALIQ_ICMS": 0,  # Alíquota do ICMS
    #         "VL_ICMS": 0,  # Valor do ICMS creditado/debitado
    #         "VL_BC_ICMS_ST": 0,  # Valor da base de cálculo referente à substitui...
    #         "ALIQ_ST": 0,  # Alíquota do ICMS da substituição tributária na unida...
    #         "VL_ICMS_ST": 0,  # Valor do ICMS referente à substituição tributária
    #         "IND_REC": 0,  # Indicador do tipo de receita: 0- Receita própria; 1-...
    #         "COD_PART": 0,  # Código do participante receptor da receita, terceir...
    #         "VL_PIS": 0,  # Valor do PIS
    #         "VL_COFINS": 0,  # Valor da COFINS
    #         "COD_CTA": 0,  # Código da conta analítica contábil debitada/creditad...
    #     }


class Registro1600(models.Model):
    "Total das operações com cartão de crédito e/ou débito"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1600"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1600"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "TOT_CREDITO": 0,  # Valor total das operações de crédito realizadas ...
    #         "TOT_DEBITO": 0,  # Valor total das operações de débito realizadas no...
    #     }


class Registro1601(models.Model):
    "Operações com instrumentos de pagamentos eletrônicos"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1601"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1601"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART_IP": 0,  # Código do participante (campo 02 do Registro 015...
    #         "COD_PART_IT": 0,  # Código do participante (campo 02 do Registro 015...
    #         "TOT_VS": 0,  # Valor total bruto das vendas e/ou prestações de servi...
    #         "TOT_ISS": 0,  # Valor total bruto das prestações de serviços no camp...
    #         "TOT_OUTROS": 0,  # Valor total de operações deduzido dos valores dos...
    #     }


class Registro1700(models.Model):
    "Documentos fiscais utilizados"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1700"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1700"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_DISP": 0,  # Código dispositivo autorizado: 00 - Formulário de S...
    #         "COD_MOD": 0,  # Código do modelo do dispositivo autorizado, conforme...
    #         "SER": 0,  # Série do dispositivo autorizado
    #         "SUB": 0,  # Subsérie do dispositivo autorizado
    #         "NUM_DOC_INI": 0,  # Número do dispositivo autorizado (utilizado) ini...
    #         "NUM_DOC_FIN": 0,  # Número do dispositivo autorizado (utilizado) fin...
    #         "NUM_AUT": 0,  # Número da autorização, conforme dispositivo autoriza...
    #     }


class Registro1710(models.Model):
    "Documentos fiscais cancelados/inutilizados"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1710"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1710"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_DOC_INI": 0,  # Número do dispositivo autorizado (inutilizado) i...
    #         "NUM_DOC_FIN": 0,  # Número do dispositivo autorizado (inutilizado) f...
    #     }


class Registro1800(models.Model):
    "DCTA"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1800"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1800"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_CARGA": 0,  # Valor das prestações cargas (Tributado)
    #         "VL_PASS": 0,  # Valor das prestações passageiros/cargas (Não Tributa...
    #         "VL_FAT": 0,  # Valor total do faturamento (2+3)
    #         "IND_RAT": 0,  # Índice para rateio(2 / 4)
    #         "VL_ICMS_ANT": 0,  # Valor total dos créditos do ICMS
    #         "VL_BC_ICMS": 0,  # Valor da base de cálculo do ICMS
    #         "VL_ICMS_APUR": 0,  # Valor do ICMS apurado no cálculo (5 x 6)
    #         "VL_BC_ICMS_APUR": 0,  # Valor da base de cálculo do ICMS apurada (5 ...
    #         "VL_DIF": 0,  # Valor da diferença a ser levada a estorno de crédito ...
    #     }


class Registro1900(models.Model):
    "Indicador de Sub-apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1900"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1900"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_APUR_ICMS": 0,  # Indicador de outra apuração do ICMS: 3 – APURA...
    #         "DESCR_COMPL_OUT_APUR": 0,  # Descrição complementar de Outra Apuraçã...
    #     }


class Registro1910(models.Model):
    "Período da Sub-apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1910"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1910"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "DT_INI": 0,  # Data inicial da sub-apuração
    #         "DT_FIN": 0,  # Data final da sub-apuração
    #     }


class Registro1920(models.Model):
    "Sub-apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1920"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1920"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "VL_TOT_TRANSF_DEBITOS_OA": 0,  # Valor total dos débitos por “Saídas...
    #         "VL_TOT_AJ_DEBITOS_OA": 0,  # Valor total de “Ajustes a débito”
    #         "VL_ESTORNOS_CRED_OA": 0,  # Valor total de Ajustes “Estornos de créd...
    #         "VL_TOT_TRANSF_CREDITOS_OA": 0,  # Valor total dos créditos por “Entr...
    #         "VL_TOT_AJ_CREDITOS_OA": 0,  # Valor total de “Ajustes a crédito”
    #         "VL_ESTORNOS_DEB_OA": 0,  # Valor total de Ajustes “Estornos de Débit...
    #         "VL_SLD_CREDOR_ANT_OA": 0,  # Valor total de “Saldo credor do período...
    #         "VL_SLD_APURADO_OA": 0,  # Valor do saldo devedor apurado
    #         "VL_TOT_DED": 0,  # Valor total de “Deduções”
    #         "VL_ICMS_RECOLHER_OA": 0,  # Valor total de "ICMS a recolher (09-10)
    #         "VL_SLD_CREDOR_TRANSP_OA": 0,  # Valor total de “Saldo credor a trans...
    #         "DEB_ESP_OA": 0,  # Valores recolhidos ou a recolher, extra- apuração...
    #     }


class Registro1921(models.Model):
    "Ajuste/Benefício/Incentivo da Sub- apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1921"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1921"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_AJ_APUR": 0,  # Código do ajuste da SUB-APURAÇÃO e dedução, conf...
    #         "DESCR_COMPL_AJ": 0,  # Descrição complementar do ajuste da apuração.
    #         "VL_AJ_APUR": 0,  # Valor do ajuste da apuração
    #     }


class Registro1922(models.Model):
    "Informações Adicionais dos Ajustes da Sub-apuração do ICMS"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1922"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1922"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "NUM_DA": 0,  # Número do documento de arrecadação estadual, se houve...
    #         "NUM_PROC": 0,  # Número do processo ao qual o ajuste está vinculado,...
    #         "IND_PROC": 0,  # Indicador da origem do processo: 0- SEFAZ; 1- Justi...
    #         "PROC": 0,  # Descrição resumida do processo que embasou o lançamento
    #         "TXT_COMPL": 0,  # Descrição complementar
    #     }


class Registro1923(models.Model):
    "Informações Adicionais dos Ajustes da Sub-apuração do ICMS – Identificação dos Documentos Fiscais"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1923"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1923"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_PART": 0,  # Código do participante (campo 02 do Registro 0150):...
    #         "COD_MOD": 0,  # Código do modelo do documento fiscal, conforme a Tab...
    #         "SER": 0,  # Série do documento fiscal
    #         "SUB": 0,  # Subsérie do documento fiscal
    #         "NUM_DOC": 0,  # Número do documento fiscal
    #         "DT_DOC": 0,  # Data da emissão do documento fiscal
    #         "COD_ITEM": 0,  # Código do item (campo 02 do Registro 0200)
    #         "VL_AJ_ITEM": 0,  # Valor do ajuste para a operação/item
    #         "CHV_DOCe": 0,  # Chave do Documento Eletrônico
    #     }


class Registro1925(models.Model):
    "Informações Adicionais da Sub- apuração – Valores Declaratórios"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1925"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1925"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_INF_ADIC": 0,  # Código da informação adicional conforme tabela ...
    #         "VL_INF_ADIC": 0,  # Valor referente à informação adicional
    #         "DESCR_COMPL_AJ": 0,  # Descrição complementar do ajuste
    #     }


class Registro1926(models.Model):
    "Obrigações do ICMS A Recolher – Operações referentes à Sub-apuração"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1926"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1926"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "COD_OR": 0,  # Código da obrigação a recolher, conforme a Tabela 5.4
    #         "VL_OR": 0,  # Valor da obrigação a recolher
    #         "DT_VCTO": 0,  # Data de vencimento da obrigação
    #         "COD_REC": 0,  # Código de receita referente à obrigação, próprio da ...
    #         "NUM_PROC": 0,  # Número do processo ou auto de infração ao qual a ob...
    #         "IND_PROC": 0,  # Indicador da origem do processo: 0- SEFAZ; 1- Justi...
    #         "PROC": 0,  # Descrição resumida do processo que embasou o lançamento
    #         "TXT_COMPL": 0,  # Descrição complementar das obrigações a recolher.
    #         "MES_REF": 0,  # Informe o mês de referência no formato “mmaaaa”
    #     }


class Registro1960(models.Model):
    "GIAF 1"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1960"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1960"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_AP": 0,  # Indicador da sub-apuração por tipo de benefício (conf...
    #         "G1_01": 0,  # Percentual de crédito presumido
    #         "G1_02": 0,  # Saídas não incentivadas de PI
    #         "G1_03": 0,  # Saídas incentivadas de PI
    #         "G1_04": 0,  # Saídas incentivadas de PI para fora do Nordeste
    #         "G1_05": 0,  # Saldo devedor do ICMS antes das deduções do incentivo
    #         "G1_06": 0,  # Saldo devedor do ICMS relativo à faixa incentivada de ...
    #         "G1_07": 0,  # Crédito presumido nas saídas incentivadas de PI para f...
    #         "G1_08": 0,  # Saldo devedor relativo à faixa incentivada de PI após ...
    #         "G1_09": 0,  # Crédito presumido
    #         "G1_10": 0,  # Dedução de incentivo da Indústria (crédito presumido)
    #         "G1_11": 0,  # Saldo devedor do ICMS após deduções
    #     }


class Registro1970(models.Model):
    "GIAF 3"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1970"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1970"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_AP": 0,  # Indicador da sub-apuração por tipo de benefício (conf...
    #         "G3_01": 0,  # Importações com ICMS diferido
    #         "G3_02": 0,  # ICMS diferido nas importações
    #         "G3_03": 0,  # Saídas não incentivadas de PI
    #         "G3_04": 0,  # Percentual de incentivo nas saídas para fora do Estado
    #         "G3_05": 0,  # Saídas incentivadas de PI para fora do Estado
    #         "G3_06": 0,  # ICMS das saídas incentivadas de PI para fora do Estado
    #         "G3_07": 0,  # Crédito presumido nas saídas para fora do Estado.
    #         "G3_T": 0,  # Dedução de incentivo da Importação (crédito presumido)
    #         "G3_08": 0,  # Saldo devedor do ICMS antes das deduções do incentivo
    #         "G3_09": 0,  # Saldo devedor do ICMS após deduções do incentivo
    #     }


class Registro1975(models.Model):
    "GIAF 3"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1975"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1975"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "ALIQ_IMP_BASE": 0,  # Alíquota incidente sobre as importações-base
    #         "G3_10": 0,  # Saídas incentivadas de PI
    #         "G3_11": 0,  # Importações-base para o crédito presumido
    #         "G3_12": 0,  # Crédito presumido nas saídas internas
    #     }


class Registro1980(models.Model):
    "GIAF 4"
    _description = textwrap.dedent("    %s" % (__doc__,))
    _name = "l10n_br_sped.efd_icms_ipi.1980"
    _inherit = "l10n_br_sped.efd_icms_ipi.17.1980"

    # @api.model
    # def _map_from_odoo(self, record, parent_record, declaration, index=0):
    #     return {
    #         "IND_AP": 0,  # Indicador da sub-apuração por tipo de benefício (conf...
    #         "G4_01": 0,  # Entradas (percentual de incentivo)
    #         "G4_02": 0,  # Entradas não incentivadas de PI
    #         "G4_03": 0,  # Entradas incentivadas de PI
    #         "G4_04": 0,  # Saídas (percentual de incentivo)
    #         "G4_05": 0,  # Saídas não incentivadas de PI
    #         "G4_06": 0,  # Saídas incentivadas de PI
    #         "G4_07": 0,  # Saldo devedor do ICMS antes das deduções do incentivo ...
    #         "G4_08": 0,  # Crédito presumido nas entradas incentivadas de PI
    #         "G4_09": 0,  # Crédito presumido nas saídas incentivadas de PI
    #         "G4_10": 0,  # Dedução de incentivo da Central de Distribuição (entra...
    #         "G4_11": 0,  # Saldo devedor do ICMS após deduções do incentivo
    #         "G4_12": 0,  # Índice de recolhimento da central de distribuição
    #     }
